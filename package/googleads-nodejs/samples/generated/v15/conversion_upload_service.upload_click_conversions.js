// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(customerId, conversions, partialFailure) {
  // [START googleads_v15_generated_ConversionUploadService_UploadClickConversions_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The ID of the customer performing the upload.
   */
  // const customerId = 'abc123'
  /**
   *  Required. The conversions that are being uploaded.
   */
  // const conversions = [1,2,3,4]
  /**
   *  Required. If true, successful operations will be carried out and invalid
   *  operations will return errors. If false, all operations will be carried
   *  out in one transaction if and only if they are all valid.
   *  This should always be set to true.
   *  See
   *  https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
   *  for more information about partial failure.
   */
  // const partialFailure = true
  /**
   *  If true, the request is validated but not executed. Only errors are
   *  returned, not results.
   */
  // const validateOnly = true
  /**
   *  If true, the API will perform all upload checks and return errors if
   *  any are found. If false, it will perform only basic input validation,
   *  skip subsequent upload checks, and return success even if no click
   *  was found for the provided `user_identifiers`.
   *  This setting only affects Enhanced conversions for leads uploads that use
   *  `user_identifiers` instead of `GCLID`, `GBRAID`, or `WBRAID`. When
   *  uploading enhanced conversions for leads, you should upload all conversion
   *  events to the API, including those that may not come from Google Ads
   *  campaigns. The upload of an event that is not from a Google Ads campaign
   *  will result in a `CLICK_NOT_FOUND` error if this field is set to `true`.
   *  Since these errors are expected for such events, set this field to `false`
   *  so you can confirm your uploads are properly formatted but ignore
   *  `CLICK_NOT_FOUND` errors from all of the conversions that are not from a
   *  Google Ads campaign. This will allow you to focus only on errors that you
   *  can address.
   *  Default is false.
   */
  // const debugEnabled = true
  /**
   *  Optional. Optional input to set job ID. Must be a non-negative number that
   *  is less than 2^31 if provided. If this field is not provided, the API will
   *  generate a job ID in the range 2^31, (2^63)-1. The API will return the
   *  value for this request in the `job_id` field of the
   *  `UploadClickConversionsResponse`.
   */
  // const jobId = 1234

  // Imports the Googleads library
  const {ConversionUploadServiceClient} = require('google-ads').v15;

  // Instantiates a client
  const googleadsClient = new ConversionUploadServiceClient();

  async function callUploadClickConversions() {
    // Construct request
    const request = {
      customerId,
      conversions,
      partialFailure,
    };

    // Run request
    const response = await googleadsClient.uploadClickConversions(request);
    console.log(response);
  }

  callUploadClickConversions();
  // [END googleads_v15_generated_ConversionUploadService_UploadClickConversions_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
