// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import * as gax from 'google-gax';
import {Callback, CallOptions, Descriptors, ClientOptions} from 'google-gax';
import * as path from 'path';

import * as protos from '../../protos/protos';
/**
 * Client JSON configuration object, loaded from
 * `src/v6/account_budget_proposal_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './account_budget_proposal_service_client_config.json';

const version = require('../../../package.json').version;

/**
 *  A service for managing account-level budgets via proposals.
 *
 *  A proposal is a request to create a new budget or make changes to an
 *  existing one.
 *
 *  Reads for account-level budgets managed by these proposals will be
 *  supported in a future version. Until then, please use the
 *  BudgetOrderService from the AdWords API. Learn more at
 *  https://developers.google.com/adwords/api/docs/guides/budget-order
 *
 *  Mutates:
 *  The CREATE operation creates a new proposal.
 *  UPDATE operations aren't supported.
 *  The REMOVE operation cancels a pending proposal.
 * @class
 * @memberof v6
 */
export class AccountBudgetProposalServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  accountBudgetProposalServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of AccountBudgetProposalServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP fallback mode.
   *     In fallback mode, a special browser-compatible transport implementation is used
   *     instead of gRPC transport. In browser context (if the `window` object is defined)
   *     the fallback mode is enabled automatically; set `options.fallback` to `false`
   *     if you need to override this behavior.
   */
  constructor(opts?: ClientOptions) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof AccountBudgetProposalServiceClient;
    const servicePath = opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gax.fallback : gax;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    // For Node.js, pass the path to JSON proto file.
    // For browsers, pass the JSON content.

    const nodejsProtoPath = path.join(__dirname, '..', '..', 'protos', 'protos.json');
    this._protos = this._gaxGrpc.loadProto(
      opts.fallback ?
        // eslint-disable-next-line @typescript-eslint/no-var-requires
        require("../../protos/protos.json") :
        nodejsProtoPath
    );

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      accountBudgetPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/accountBudgets/{account_budget_id}'
      ),
      accountBudgetProposalPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/accountBudgetProposals/{account_budget_proposal_id}'
      ),
      accountLinkPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/accountLinks/{account_link_id}'
      ),
      adPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/ads/{ad_id}'
      ),
      adGroupPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroups/{ad_group_id}'
      ),
      adGroupAdPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupAds/{ad_group_id}~{ad_id}'
      ),
      adGroupAdAssetViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupAdAssetViews/{ad_group_id}~{ad_id}~{asset_id}~{field_type}'
      ),
      adGroupAdLabelPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupAdLabels/{ad_group_id}~{ad_id}~{label_id}'
      ),
      adGroupAudienceViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupAudienceViews/{ad_group_id}~{criterion_id}'
      ),
      adGroupBidModifierPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupBidModifiers/{ad_group_id}~{criterion_id}'
      ),
      adGroupCriterionPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupCriteria/{ad_group_id}~{criterion_id}'
      ),
      adGroupCriterionLabelPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupCriterionLabels/{ad_group_id}~{criterion_id}~{label_id}'
      ),
      adGroupCriterionSimulationPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupCriterionSimulations/{ad_group_id}~{criterion_id}~{type}~{modification_method}~{start_date}~{end_date}'
      ),
      adGroupExtensionSettingPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupExtensionSettings/{ad_group_id}~{extension_type}'
      ),
      adGroupFeedPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupFeeds/{ad_group_id}~{feed_id}'
      ),
      adGroupLabelPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupLabels/{ad_group_id}~{label_id}'
      ),
      adGroupSimulationPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adGroupSimulations/{ad_group_id}~{type}~{modification_method}~{start_date}~{end_date}'
      ),
      adParameterPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adParameters/{ad_group_id}~{criterion_id}~{parameter_index}'
      ),
      adScheduleViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/adScheduleViews/{campaign_id}~{criterion_id}'
      ),
      ageRangeViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/ageRangeViews/{ad_group_id}~{criterion_id}'
      ),
      assetPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/assets/{asset_id}'
      ),
      batchJobPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/batchJobs/{batch_job_id}'
      ),
      biddingStrategyPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/biddingStrategies/{bidding_strategy_id}'
      ),
      billingSetupPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/billingSetups/{billing_setup_id}'
      ),
      campaignPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaigns/{campaign_id}'
      ),
      campaignAssetPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignAssets/{campaign_id}~{asset_id}~{field_type}'
      ),
      campaignAudienceViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignAudienceViews/{campaign_id}~{criterion_id}'
      ),
      campaignBidModifierPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignBidModifiers/{campaign_id}~{criterion_id}'
      ),
      campaignBudgetPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignBudgets/{campaign_budget_id}'
      ),
      campaignCriterionPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignCriteria/{campaign_id}~{criterion_id}'
      ),
      campaignCriterionSimulationPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignCriterionSimulations/{campaign_id}~{criterion_id}~{type}~{modification_method}~{start_date}~{end_date}'
      ),
      campaignDraftPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignDrafts/{base_campaign_id}~{draft_id}'
      ),
      campaignExperimentPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignExperiments/{campaign_experiment_id}'
      ),
      campaignExtensionSettingPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignExtensionSettings/{campaign_id}~{extension_type}'
      ),
      campaignFeedPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignFeeds/{campaign_id}~{feed_id}'
      ),
      campaignLabelPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignLabels/{campaign_id}~{label_id}'
      ),
      campaignSharedSetPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/campaignSharedSets/{campaign_id}~{shared_set_id}'
      ),
      carrierConstantPathTemplate: new this._gaxModule.PathTemplate(
        'carrierConstants/{criterion_id}'
      ),
      changeEventPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/changeEvents/{timestamp_micros}~{command_index}~{mutate_index}'
      ),
      changeStatusPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/changeStatus/{change_status_id}'
      ),
      clickViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/clickViews/{date}~{gclid}'
      ),
      combinedAudiencePathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/combinedAudiences/{combined_audience_id}'
      ),
      conversionActionPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/conversionActions/{conversion_action_id}'
      ),
      currencyConstantPathTemplate: new this._gaxModule.PathTemplate(
        'currencyConstants/{code}'
      ),
      customAudiencePathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/customAudiences/{custom_audience_id}'
      ),
      customInterestPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/customInterests/{custom_interest_id}'
      ),
      customerPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}'
      ),
      customerClientPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/customerClients/{client_customer_id}'
      ),
      customerClientLinkPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/customerClientLinks/{client_customer_id}~{manager_link_id}'
      ),
      customerExtensionSettingPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/customerExtensionSettings/{extension_type}'
      ),
      customerFeedPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/customerFeeds/{feed_id}'
      ),
      customerLabelPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/customerLabels/{label_id}'
      ),
      customerManagerLinkPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/customerManagerLinks/{manager_customer_id}~{manager_link_id}'
      ),
      customerNegativeCriterionPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/customerNegativeCriteria/{criterion_id}'
      ),
      customerUserAccessPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/customerUserAccesses/{user_id}'
      ),
      detailPlacementViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/detailPlacementViews/{ad_group_id}~{base64_placement}'
      ),
      displayKeywordViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/displayKeywordViews/{ad_group_id}~{criterion_id}'
      ),
      distanceViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/distanceViews/{placeholder_chain_id}~{distance_bucket}'
      ),
      domainCategoryPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/domainCategories/{campaign_id}~{base64_category}~{language_code}'
      ),
      dynamicSearchAdsSearchTermViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/dynamicSearchAdsSearchTermViews/{ad_group_id}~{search_term_fingerprint}~{headline_fingerprint}~{landing_page_fingerprint}~{page_url_fingerprint}'
      ),
      expandedLandingPageViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/expandedLandingPageViews/{expanded_final_url_fingerprint}'
      ),
      extensionFeedItemPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/extensionFeedItems/{feed_item_id}'
      ),
      feedPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/feeds/{feed_id}'
      ),
      feedItemPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/feedItems/{feed_id}~{feed_item_id}'
      ),
      feedItemSetPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/feedItemSets/{feed_id}~{feed_item_set_id}'
      ),
      feedItemSetLinkPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/feedItemSetLinks/{feed_id}~{feed_item_set_id}~{feed_item_id}'
      ),
      feedItemTargetPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/feedItemTargets/{feed_id}~{feed_item_id}~{feed_item_target_type}~{feed_item_target_id}'
      ),
      feedMappingPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}'
      ),
      feedPlaceholderViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/feedPlaceholderViews/{placeholder_type}'
      ),
      genderViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/genderViews/{ad_group_id}~{criterion_id}'
      ),
      geoTargetConstantPathTemplate: new this._gaxModule.PathTemplate(
        'geoTargetConstants/{criterion_id}'
      ),
      geographicViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/geographicViews/{country_criterion_id}~{location_type}'
      ),
      googleAdsFieldPathTemplate: new this._gaxModule.PathTemplate(
        'googleAdsFields/{google_ads_field}'
      ),
      groupPlacementViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/groupPlacementViews/{ad_group_id}~{base64_placement}'
      ),
      hotelGroupViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/hotelGroupViews/{ad_group_id}~{criterion_id}'
      ),
      hotelPerformanceViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/hotelPerformanceView'
      ),
      incomeRangeViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/incomeRangeViews/{ad_group_id}~{criterion_id}'
      ),
      invoicePathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/invoices/{invoice_id}'
      ),
      keywordPlanPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/keywordPlans/{keyword_plan_id}'
      ),
      keywordPlanAdGroupPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/keywordPlanAdGroups/{keyword_plan_ad_group_id}'
      ),
      keywordPlanAdGroupKeywordPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/keywordPlanAdGroupKeywords/{keyword_plan_ad_group_keyword_id}'
      ),
      keywordPlanCampaignPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/keywordPlanCampaigns/{keyword_plan_campaign_id}'
      ),
      keywordPlanCampaignKeywordPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/keywordPlanCampaignKeywords/{keyword_plan_campaign_keyword_id}'
      ),
      keywordViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/keywordViews/{ad_group_id}~{criterion_id}'
      ),
      labelPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/labels/{label_id}'
      ),
      landingPageViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/landingPageViews/{unexpanded_final_url_fingerprint}'
      ),
      languageConstantPathTemplate: new this._gaxModule.PathTemplate(
        'languageConstants/{criterion_id}'
      ),
      locationViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/locationViews/{campaign_id}~{criterion_id}'
      ),
      managedPlacementViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/managedPlacementViews/{ad_group_id}~{criterion_id}'
      ),
      mediaFilePathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/mediaFiles/{media_file_id}'
      ),
      merchantCenterLinkPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/merchantCenterLinks/{merchant_center_id}'
      ),
      mobileAppCategoryConstantPathTemplate: new this._gaxModule.PathTemplate(
        'mobileAppCategoryConstants/{mobile_app_category_id}'
      ),
      mobileDeviceConstantPathTemplate: new this._gaxModule.PathTemplate(
        'mobileDeviceConstants/{criterion_id}'
      ),
      offlineUserDataJobPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/offlineUserDataJobs/{offline_user_data_update_id}'
      ),
      operatingSystemVersionConstantPathTemplate: new this._gaxModule.PathTemplate(
        'operatingSystemVersionConstants/{criterion_id}'
      ),
      paidOrganicSearchTermViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/paidOrganicSearchTermViews/{campaign_id}~{ad_group_id}~{base64_search_term}'
      ),
      parentalStatusViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/parentalStatusViews/{ad_group_id}~{criterion_id}'
      ),
      paymentsAccountPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/paymentsAccounts/{payments_account_id}'
      ),
      productBiddingCategoryConstantPathTemplate: new this._gaxModule.PathTemplate(
        'productBiddingCategoryConstants/{country_code}~{level}~{id}'
      ),
      productGroupViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/productGroupViews/{adgroup_id}~{criterion_id}'
      ),
      recommendationPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/recommendations/{recommendation_id}'
      ),
      remarketingActionPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/remarketingActions/{remarketing_action_id}'
      ),
      searchTermViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/searchTermViews/{campaign_id}~{ad_group_id}~{query}'
      ),
      sharedCriterionPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/sharedCriteria/{shared_set_id}~{criterion_id}'
      ),
      sharedSetPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/sharedSets/{shared_set_id}'
      ),
      shoppingPerformanceViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/shoppingPerformanceView'
      ),
      thirdPartyAppAnalyticsLinkPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/thirdPartyAppAnalyticsLinks/{customer_link_id}'
      ),
      topicConstantPathTemplate: new this._gaxModule.PathTemplate(
        'topicConstants/{topic_id}'
      ),
      topicViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/topicViews/{ad_group_id}~{criterion_id}'
      ),
      userInterestPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/userInterests/{user_interest_id}'
      ),
      userListPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/userLists/{user_list_id}'
      ),
      userLocationViewPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/userLocationViews/{country_criterion_id}~{is_targeting_location}'
      ),
      videoPathTemplate: new this._gaxModule.PathTemplate(
        'customers/{customer_id}/videos/{video_id}'
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.ads.googleads.v6.services.AccountBudgetProposalService', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.accountBudgetProposalServiceStub) {
      return this.accountBudgetProposalServiceStub;
    }

    // Put together the "service stub" for
    // google.ads.googleads.v6.services.AccountBudgetProposalService.
    this.accountBudgetProposalServiceStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.ads.googleads.v6.services.AccountBudgetProposalService') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.ads.googleads.v6.services.AccountBudgetProposalService,
        this._opts) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const accountBudgetProposalServiceStubMethods =
        ['getAccountBudgetProposal', 'mutateAccountBudgetProposal'];
    for (const methodName of accountBudgetProposalServiceStubMethods) {
      const callPromise = this.accountBudgetProposalServiceStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.accountBudgetProposalServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'googleads.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'googleads.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/adwords'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  getAccountBudgetProposal(
      request: protos.google.ads.googleads.v6.services.IGetAccountBudgetProposalRequest,
      options?: CallOptions):
      Promise<[
        protos.google.ads.googleads.v6.resources.IAccountBudgetProposal,
        protos.google.ads.googleads.v6.services.IGetAccountBudgetProposalRequest|undefined, {}|undefined
      ]>;
  getAccountBudgetProposal(
      request: protos.google.ads.googleads.v6.services.IGetAccountBudgetProposalRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.ads.googleads.v6.resources.IAccountBudgetProposal,
          protos.google.ads.googleads.v6.services.IGetAccountBudgetProposalRequest|null|undefined,
          {}|null|undefined>): void;
  getAccountBudgetProposal(
      request: protos.google.ads.googleads.v6.services.IGetAccountBudgetProposalRequest,
      callback: Callback<
          protos.google.ads.googleads.v6.resources.IAccountBudgetProposal,
          protos.google.ads.googleads.v6.services.IGetAccountBudgetProposalRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Returns an account-level budget proposal in full detail.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.resourceName
 *   Required. The resource name of the account-level budget proposal to fetch.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [AccountBudgetProposal]{@link google.ads.googleads.v6.resources.AccountBudgetProposal}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example
 * const [response] = await client.getAccountBudgetProposal(request);
 */
  getAccountBudgetProposal(
      request: protos.google.ads.googleads.v6.services.IGetAccountBudgetProposalRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.ads.googleads.v6.resources.IAccountBudgetProposal,
          protos.google.ads.googleads.v6.services.IGetAccountBudgetProposalRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.ads.googleads.v6.resources.IAccountBudgetProposal,
          protos.google.ads.googleads.v6.services.IGetAccountBudgetProposalRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.ads.googleads.v6.resources.IAccountBudgetProposal,
        protos.google.ads.googleads.v6.services.IGetAccountBudgetProposalRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'resource_name': request.resourceName || '',
    });
    this.initialize();
    return this.innerApiCalls.getAccountBudgetProposal(request, options, callback);
  }
  mutateAccountBudgetProposal(
      request: protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalRequest,
      options?: CallOptions):
      Promise<[
        protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalResponse,
        protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalRequest|undefined, {}|undefined
      ]>;
  mutateAccountBudgetProposal(
      request: protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalResponse,
          protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalRequest|null|undefined,
          {}|null|undefined>): void;
  mutateAccountBudgetProposal(
      request: protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalRequest,
      callback: Callback<
          protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalResponse,
          protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Creates, updates, or removes account budget proposals.  Operation statuses
 * are returned.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.customerId
 *   Required. The ID of the customer.
 * @param {google.ads.googleads.v6.services.AccountBudgetProposalOperation} request.operation
 *   Required. The operation to perform on an individual account-level budget proposal.
 * @param {boolean} request.validateOnly
 *   If true, the request is validated but not executed. Only errors are
 *   returned, not results.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [MutateAccountBudgetProposalResponse]{@link google.ads.googleads.v6.services.MutateAccountBudgetProposalResponse}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example
 * const [response] = await client.mutateAccountBudgetProposal(request);
 */
  mutateAccountBudgetProposal(
      request: protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalResponse,
          protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalResponse,
          protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalResponse,
        protos.google.ads.googleads.v6.services.IMutateAccountBudgetProposalRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'customer_id': request.customerId || '',
    });
    this.initialize();
    return this.innerApiCalls.mutateAccountBudgetProposal(request, options, callback);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified accountBudget resource name string.
   *
   * @param {string} customer_id
   * @param {string} account_budget_id
   * @returns {string} Resource name string.
   */
  accountBudgetPath(customerId:string,accountBudgetId:string) {
    return this.pathTemplates.accountBudgetPathTemplate.render({
      customer_id: customerId,
      account_budget_id: accountBudgetId,
    });
  }

  /**
   * Parse the customer_id from AccountBudget resource.
   *
   * @param {string} accountBudgetName
   *   A fully-qualified path representing AccountBudget resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAccountBudgetName(accountBudgetName: string) {
    return this.pathTemplates.accountBudgetPathTemplate.match(accountBudgetName).customer_id;
  }

  /**
   * Parse the account_budget_id from AccountBudget resource.
   *
   * @param {string} accountBudgetName
   *   A fully-qualified path representing AccountBudget resource.
   * @returns {string} A string representing the account_budget_id.
   */
  matchAccountBudgetIdFromAccountBudgetName(accountBudgetName: string) {
    return this.pathTemplates.accountBudgetPathTemplate.match(accountBudgetName).account_budget_id;
  }

  /**
   * Return a fully-qualified accountBudgetProposal resource name string.
   *
   * @param {string} customer_id
   * @param {string} account_budget_proposal_id
   * @returns {string} Resource name string.
   */
  accountBudgetProposalPath(customerId:string,accountBudgetProposalId:string) {
    return this.pathTemplates.accountBudgetProposalPathTemplate.render({
      customer_id: customerId,
      account_budget_proposal_id: accountBudgetProposalId,
    });
  }

  /**
   * Parse the customer_id from AccountBudgetProposal resource.
   *
   * @param {string} accountBudgetProposalName
   *   A fully-qualified path representing AccountBudgetProposal resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAccountBudgetProposalName(accountBudgetProposalName: string) {
    return this.pathTemplates.accountBudgetProposalPathTemplate.match(accountBudgetProposalName).customer_id;
  }

  /**
   * Parse the account_budget_proposal_id from AccountBudgetProposal resource.
   *
   * @param {string} accountBudgetProposalName
   *   A fully-qualified path representing AccountBudgetProposal resource.
   * @returns {string} A string representing the account_budget_proposal_id.
   */
  matchAccountBudgetProposalIdFromAccountBudgetProposalName(accountBudgetProposalName: string) {
    return this.pathTemplates.accountBudgetProposalPathTemplate.match(accountBudgetProposalName).account_budget_proposal_id;
  }

  /**
   * Return a fully-qualified accountLink resource name string.
   *
   * @param {string} customer_id
   * @param {string} account_link_id
   * @returns {string} Resource name string.
   */
  accountLinkPath(customerId:string,accountLinkId:string) {
    return this.pathTemplates.accountLinkPathTemplate.render({
      customer_id: customerId,
      account_link_id: accountLinkId,
    });
  }

  /**
   * Parse the customer_id from AccountLink resource.
   *
   * @param {string} accountLinkName
   *   A fully-qualified path representing AccountLink resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAccountLinkName(accountLinkName: string) {
    return this.pathTemplates.accountLinkPathTemplate.match(accountLinkName).customer_id;
  }

  /**
   * Parse the account_link_id from AccountLink resource.
   *
   * @param {string} accountLinkName
   *   A fully-qualified path representing AccountLink resource.
   * @returns {string} A string representing the account_link_id.
   */
  matchAccountLinkIdFromAccountLinkName(accountLinkName: string) {
    return this.pathTemplates.accountLinkPathTemplate.match(accountLinkName).account_link_id;
  }

  /**
   * Return a fully-qualified ad resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_id
   * @returns {string} Resource name string.
   */
  adPath(customerId:string,adId:string) {
    return this.pathTemplates.adPathTemplate.render({
      customer_id: customerId,
      ad_id: adId,
    });
  }

  /**
   * Parse the customer_id from Ad resource.
   *
   * @param {string} adName
   *   A fully-qualified path representing Ad resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdName(adName: string) {
    return this.pathTemplates.adPathTemplate.match(adName).customer_id;
  }

  /**
   * Parse the ad_id from Ad resource.
   *
   * @param {string} adName
   *   A fully-qualified path representing Ad resource.
   * @returns {string} A string representing the ad_id.
   */
  matchAdIdFromAdName(adName: string) {
    return this.pathTemplates.adPathTemplate.match(adName).ad_id;
  }

  /**
   * Return a fully-qualified adGroup resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @returns {string} Resource name string.
   */
  adGroupPath(customerId:string,adGroupId:string) {
    return this.pathTemplates.adGroupPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
    });
  }

  /**
   * Parse the customer_id from AdGroup resource.
   *
   * @param {string} adGroupName
   *   A fully-qualified path representing AdGroup resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupName(adGroupName: string) {
    return this.pathTemplates.adGroupPathTemplate.match(adGroupName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroup resource.
   *
   * @param {string} adGroupName
   *   A fully-qualified path representing AdGroup resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupName(adGroupName: string) {
    return this.pathTemplates.adGroupPathTemplate.match(adGroupName).ad_group_id;
  }

  /**
   * Return a fully-qualified adGroupAd resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} ad_id
   * @returns {string} Resource name string.
   */
  adGroupAdPath(customerId:string,adGroupId:string,adId:string) {
    return this.pathTemplates.adGroupAdPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      ad_id: adId,
    });
  }

  /**
   * Parse the customer_id from AdGroupAd resource.
   *
   * @param {string} adGroupAdName
   *   A fully-qualified path representing AdGroupAd resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupAdName(adGroupAdName: string) {
    return this.pathTemplates.adGroupAdPathTemplate.match(adGroupAdName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupAd resource.
   *
   * @param {string} adGroupAdName
   *   A fully-qualified path representing AdGroupAd resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupAdName(adGroupAdName: string) {
    return this.pathTemplates.adGroupAdPathTemplate.match(adGroupAdName).ad_group_id;
  }

  /**
   * Parse the ad_id from AdGroupAd resource.
   *
   * @param {string} adGroupAdName
   *   A fully-qualified path representing AdGroupAd resource.
   * @returns {string} A string representing the ad_id.
   */
  matchAdIdFromAdGroupAdName(adGroupAdName: string) {
    return this.pathTemplates.adGroupAdPathTemplate.match(adGroupAdName).ad_id;
  }

  /**
   * Return a fully-qualified adGroupAdAssetView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} ad_id
   * @param {string} asset_id
   * @param {string} field_type
   * @returns {string} Resource name string.
   */
  adGroupAdAssetViewPath(customerId:string,adGroupId:string,adId:string,assetId:string,fieldType:string) {
    return this.pathTemplates.adGroupAdAssetViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      ad_id: adId,
      asset_id: assetId,
      field_type: fieldType,
    });
  }

  /**
   * Parse the customer_id from AdGroupAdAssetView resource.
   *
   * @param {string} adGroupAdAssetViewName
   *   A fully-qualified path representing AdGroupAdAssetView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupAdAssetViewName(adGroupAdAssetViewName: string) {
    return this.pathTemplates.adGroupAdAssetViewPathTemplate.match(adGroupAdAssetViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupAdAssetView resource.
   *
   * @param {string} adGroupAdAssetViewName
   *   A fully-qualified path representing AdGroupAdAssetView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupAdAssetViewName(adGroupAdAssetViewName: string) {
    return this.pathTemplates.adGroupAdAssetViewPathTemplate.match(adGroupAdAssetViewName).ad_group_id;
  }

  /**
   * Parse the ad_id from AdGroupAdAssetView resource.
   *
   * @param {string} adGroupAdAssetViewName
   *   A fully-qualified path representing AdGroupAdAssetView resource.
   * @returns {string} A string representing the ad_id.
   */
  matchAdIdFromAdGroupAdAssetViewName(adGroupAdAssetViewName: string) {
    return this.pathTemplates.adGroupAdAssetViewPathTemplate.match(adGroupAdAssetViewName).ad_id;
  }

  /**
   * Parse the asset_id from AdGroupAdAssetView resource.
   *
   * @param {string} adGroupAdAssetViewName
   *   A fully-qualified path representing AdGroupAdAssetView resource.
   * @returns {string} A string representing the asset_id.
   */
  matchAssetIdFromAdGroupAdAssetViewName(adGroupAdAssetViewName: string) {
    return this.pathTemplates.adGroupAdAssetViewPathTemplate.match(adGroupAdAssetViewName).asset_id;
  }

  /**
   * Parse the field_type from AdGroupAdAssetView resource.
   *
   * @param {string} adGroupAdAssetViewName
   *   A fully-qualified path representing AdGroupAdAssetView resource.
   * @returns {string} A string representing the field_type.
   */
  matchFieldTypeFromAdGroupAdAssetViewName(adGroupAdAssetViewName: string) {
    return this.pathTemplates.adGroupAdAssetViewPathTemplate.match(adGroupAdAssetViewName).field_type;
  }

  /**
   * Return a fully-qualified adGroupAdLabel resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} ad_id
   * @param {string} label_id
   * @returns {string} Resource name string.
   */
  adGroupAdLabelPath(customerId:string,adGroupId:string,adId:string,labelId:string) {
    return this.pathTemplates.adGroupAdLabelPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      ad_id: adId,
      label_id: labelId,
    });
  }

  /**
   * Parse the customer_id from AdGroupAdLabel resource.
   *
   * @param {string} adGroupAdLabelName
   *   A fully-qualified path representing AdGroupAdLabel resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupAdLabelName(adGroupAdLabelName: string) {
    return this.pathTemplates.adGroupAdLabelPathTemplate.match(adGroupAdLabelName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupAdLabel resource.
   *
   * @param {string} adGroupAdLabelName
   *   A fully-qualified path representing AdGroupAdLabel resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupAdLabelName(adGroupAdLabelName: string) {
    return this.pathTemplates.adGroupAdLabelPathTemplate.match(adGroupAdLabelName).ad_group_id;
  }

  /**
   * Parse the ad_id from AdGroupAdLabel resource.
   *
   * @param {string} adGroupAdLabelName
   *   A fully-qualified path representing AdGroupAdLabel resource.
   * @returns {string} A string representing the ad_id.
   */
  matchAdIdFromAdGroupAdLabelName(adGroupAdLabelName: string) {
    return this.pathTemplates.adGroupAdLabelPathTemplate.match(adGroupAdLabelName).ad_id;
  }

  /**
   * Parse the label_id from AdGroupAdLabel resource.
   *
   * @param {string} adGroupAdLabelName
   *   A fully-qualified path representing AdGroupAdLabel resource.
   * @returns {string} A string representing the label_id.
   */
  matchLabelIdFromAdGroupAdLabelName(adGroupAdLabelName: string) {
    return this.pathTemplates.adGroupAdLabelPathTemplate.match(adGroupAdLabelName).label_id;
  }

  /**
   * Return a fully-qualified adGroupAudienceView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  adGroupAudienceViewPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.adGroupAudienceViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from AdGroupAudienceView resource.
   *
   * @param {string} adGroupAudienceViewName
   *   A fully-qualified path representing AdGroupAudienceView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupAudienceViewName(adGroupAudienceViewName: string) {
    return this.pathTemplates.adGroupAudienceViewPathTemplate.match(adGroupAudienceViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupAudienceView resource.
   *
   * @param {string} adGroupAudienceViewName
   *   A fully-qualified path representing AdGroupAudienceView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupAudienceViewName(adGroupAudienceViewName: string) {
    return this.pathTemplates.adGroupAudienceViewPathTemplate.match(adGroupAudienceViewName).ad_group_id;
  }

  /**
   * Parse the criterion_id from AdGroupAudienceView resource.
   *
   * @param {string} adGroupAudienceViewName
   *   A fully-qualified path representing AdGroupAudienceView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromAdGroupAudienceViewName(adGroupAudienceViewName: string) {
    return this.pathTemplates.adGroupAudienceViewPathTemplate.match(adGroupAudienceViewName).criterion_id;
  }

  /**
   * Return a fully-qualified adGroupBidModifier resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  adGroupBidModifierPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.adGroupBidModifierPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from AdGroupBidModifier resource.
   *
   * @param {string} adGroupBidModifierName
   *   A fully-qualified path representing AdGroupBidModifier resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupBidModifierName(adGroupBidModifierName: string) {
    return this.pathTemplates.adGroupBidModifierPathTemplate.match(adGroupBidModifierName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupBidModifier resource.
   *
   * @param {string} adGroupBidModifierName
   *   A fully-qualified path representing AdGroupBidModifier resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupBidModifierName(adGroupBidModifierName: string) {
    return this.pathTemplates.adGroupBidModifierPathTemplate.match(adGroupBidModifierName).ad_group_id;
  }

  /**
   * Parse the criterion_id from AdGroupBidModifier resource.
   *
   * @param {string} adGroupBidModifierName
   *   A fully-qualified path representing AdGroupBidModifier resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromAdGroupBidModifierName(adGroupBidModifierName: string) {
    return this.pathTemplates.adGroupBidModifierPathTemplate.match(adGroupBidModifierName).criterion_id;
  }

  /**
   * Return a fully-qualified adGroupCriterion resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  adGroupCriterionPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.adGroupCriterionPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from AdGroupCriterion resource.
   *
   * @param {string} adGroupCriterionName
   *   A fully-qualified path representing AdGroupCriterion resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupCriterionName(adGroupCriterionName: string) {
    return this.pathTemplates.adGroupCriterionPathTemplate.match(adGroupCriterionName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupCriterion resource.
   *
   * @param {string} adGroupCriterionName
   *   A fully-qualified path representing AdGroupCriterion resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupCriterionName(adGroupCriterionName: string) {
    return this.pathTemplates.adGroupCriterionPathTemplate.match(adGroupCriterionName).ad_group_id;
  }

  /**
   * Parse the criterion_id from AdGroupCriterion resource.
   *
   * @param {string} adGroupCriterionName
   *   A fully-qualified path representing AdGroupCriterion resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromAdGroupCriterionName(adGroupCriterionName: string) {
    return this.pathTemplates.adGroupCriterionPathTemplate.match(adGroupCriterionName).criterion_id;
  }

  /**
   * Return a fully-qualified adGroupCriterionLabel resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @param {string} label_id
   * @returns {string} Resource name string.
   */
  adGroupCriterionLabelPath(customerId:string,adGroupId:string,criterionId:string,labelId:string) {
    return this.pathTemplates.adGroupCriterionLabelPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
      label_id: labelId,
    });
  }

  /**
   * Parse the customer_id from AdGroupCriterionLabel resource.
   *
   * @param {string} adGroupCriterionLabelName
   *   A fully-qualified path representing AdGroupCriterionLabel resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupCriterionLabelName(adGroupCriterionLabelName: string) {
    return this.pathTemplates.adGroupCriterionLabelPathTemplate.match(adGroupCriterionLabelName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupCriterionLabel resource.
   *
   * @param {string} adGroupCriterionLabelName
   *   A fully-qualified path representing AdGroupCriterionLabel resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupCriterionLabelName(adGroupCriterionLabelName: string) {
    return this.pathTemplates.adGroupCriterionLabelPathTemplate.match(adGroupCriterionLabelName).ad_group_id;
  }

  /**
   * Parse the criterion_id from AdGroupCriterionLabel resource.
   *
   * @param {string} adGroupCriterionLabelName
   *   A fully-qualified path representing AdGroupCriterionLabel resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromAdGroupCriterionLabelName(adGroupCriterionLabelName: string) {
    return this.pathTemplates.adGroupCriterionLabelPathTemplate.match(adGroupCriterionLabelName).criterion_id;
  }

  /**
   * Parse the label_id from AdGroupCriterionLabel resource.
   *
   * @param {string} adGroupCriterionLabelName
   *   A fully-qualified path representing AdGroupCriterionLabel resource.
   * @returns {string} A string representing the label_id.
   */
  matchLabelIdFromAdGroupCriterionLabelName(adGroupCriterionLabelName: string) {
    return this.pathTemplates.adGroupCriterionLabelPathTemplate.match(adGroupCriterionLabelName).label_id;
  }

  /**
   * Return a fully-qualified adGroupCriterionSimulation resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @param {string} type
   * @param {string} modification_method
   * @param {string} start_date
   * @param {string} end_date
   * @returns {string} Resource name string.
   */
  adGroupCriterionSimulationPath(customerId:string,adGroupId:string,criterionId:string,type:string,modificationMethod:string,startDate:string,endDate:string) {
    return this.pathTemplates.adGroupCriterionSimulationPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
      type: type,
      modification_method: modificationMethod,
      start_date: startDate,
      end_date: endDate,
    });
  }

  /**
   * Parse the customer_id from AdGroupCriterionSimulation resource.
   *
   * @param {string} adGroupCriterionSimulationName
   *   A fully-qualified path representing AdGroupCriterionSimulation resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName: string) {
    return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupCriterionSimulation resource.
   *
   * @param {string} adGroupCriterionSimulationName
   *   A fully-qualified path representing AdGroupCriterionSimulation resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName: string) {
    return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).ad_group_id;
  }

  /**
   * Parse the criterion_id from AdGroupCriterionSimulation resource.
   *
   * @param {string} adGroupCriterionSimulationName
   *   A fully-qualified path representing AdGroupCriterionSimulation resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName: string) {
    return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).criterion_id;
  }

  /**
   * Parse the type from AdGroupCriterionSimulation resource.
   *
   * @param {string} adGroupCriterionSimulationName
   *   A fully-qualified path representing AdGroupCriterionSimulation resource.
   * @returns {string} A string representing the type.
   */
  matchTypeFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName: string) {
    return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).type;
  }

  /**
   * Parse the modification_method from AdGroupCriterionSimulation resource.
   *
   * @param {string} adGroupCriterionSimulationName
   *   A fully-qualified path representing AdGroupCriterionSimulation resource.
   * @returns {string} A string representing the modification_method.
   */
  matchModificationMethodFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName: string) {
    return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).modification_method;
  }

  /**
   * Parse the start_date from AdGroupCriterionSimulation resource.
   *
   * @param {string} adGroupCriterionSimulationName
   *   A fully-qualified path representing AdGroupCriterionSimulation resource.
   * @returns {string} A string representing the start_date.
   */
  matchStartDateFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName: string) {
    return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).start_date;
  }

  /**
   * Parse the end_date from AdGroupCriterionSimulation resource.
   *
   * @param {string} adGroupCriterionSimulationName
   *   A fully-qualified path representing AdGroupCriterionSimulation resource.
   * @returns {string} A string representing the end_date.
   */
  matchEndDateFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName: string) {
    return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).end_date;
  }

  /**
   * Return a fully-qualified adGroupExtensionSetting resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} extension_type
   * @returns {string} Resource name string.
   */
  adGroupExtensionSettingPath(customerId:string,adGroupId:string,extensionType:string) {
    return this.pathTemplates.adGroupExtensionSettingPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      extension_type: extensionType,
    });
  }

  /**
   * Parse the customer_id from AdGroupExtensionSetting resource.
   *
   * @param {string} adGroupExtensionSettingName
   *   A fully-qualified path representing AdGroupExtensionSetting resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupExtensionSettingName(adGroupExtensionSettingName: string) {
    return this.pathTemplates.adGroupExtensionSettingPathTemplate.match(adGroupExtensionSettingName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupExtensionSetting resource.
   *
   * @param {string} adGroupExtensionSettingName
   *   A fully-qualified path representing AdGroupExtensionSetting resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupExtensionSettingName(adGroupExtensionSettingName: string) {
    return this.pathTemplates.adGroupExtensionSettingPathTemplate.match(adGroupExtensionSettingName).ad_group_id;
  }

  /**
   * Parse the extension_type from AdGroupExtensionSetting resource.
   *
   * @param {string} adGroupExtensionSettingName
   *   A fully-qualified path representing AdGroupExtensionSetting resource.
   * @returns {string} A string representing the extension_type.
   */
  matchExtensionTypeFromAdGroupExtensionSettingName(adGroupExtensionSettingName: string) {
    return this.pathTemplates.adGroupExtensionSettingPathTemplate.match(adGroupExtensionSettingName).extension_type;
  }

  /**
   * Return a fully-qualified adGroupFeed resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} feed_id
   * @returns {string} Resource name string.
   */
  adGroupFeedPath(customerId:string,adGroupId:string,feedId:string) {
    return this.pathTemplates.adGroupFeedPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      feed_id: feedId,
    });
  }

  /**
   * Parse the customer_id from AdGroupFeed resource.
   *
   * @param {string} adGroupFeedName
   *   A fully-qualified path representing AdGroupFeed resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupFeedName(adGroupFeedName: string) {
    return this.pathTemplates.adGroupFeedPathTemplate.match(adGroupFeedName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupFeed resource.
   *
   * @param {string} adGroupFeedName
   *   A fully-qualified path representing AdGroupFeed resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupFeedName(adGroupFeedName: string) {
    return this.pathTemplates.adGroupFeedPathTemplate.match(adGroupFeedName).ad_group_id;
  }

  /**
   * Parse the feed_id from AdGroupFeed resource.
   *
   * @param {string} adGroupFeedName
   *   A fully-qualified path representing AdGroupFeed resource.
   * @returns {string} A string representing the feed_id.
   */
  matchFeedIdFromAdGroupFeedName(adGroupFeedName: string) {
    return this.pathTemplates.adGroupFeedPathTemplate.match(adGroupFeedName).feed_id;
  }

  /**
   * Return a fully-qualified adGroupLabel resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} label_id
   * @returns {string} Resource name string.
   */
  adGroupLabelPath(customerId:string,adGroupId:string,labelId:string) {
    return this.pathTemplates.adGroupLabelPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      label_id: labelId,
    });
  }

  /**
   * Parse the customer_id from AdGroupLabel resource.
   *
   * @param {string} adGroupLabelName
   *   A fully-qualified path representing AdGroupLabel resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupLabelName(adGroupLabelName: string) {
    return this.pathTemplates.adGroupLabelPathTemplate.match(adGroupLabelName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupLabel resource.
   *
   * @param {string} adGroupLabelName
   *   A fully-qualified path representing AdGroupLabel resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupLabelName(adGroupLabelName: string) {
    return this.pathTemplates.adGroupLabelPathTemplate.match(adGroupLabelName).ad_group_id;
  }

  /**
   * Parse the label_id from AdGroupLabel resource.
   *
   * @param {string} adGroupLabelName
   *   A fully-qualified path representing AdGroupLabel resource.
   * @returns {string} A string representing the label_id.
   */
  matchLabelIdFromAdGroupLabelName(adGroupLabelName: string) {
    return this.pathTemplates.adGroupLabelPathTemplate.match(adGroupLabelName).label_id;
  }

  /**
   * Return a fully-qualified adGroupSimulation resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} type
   * @param {string} modification_method
   * @param {string} start_date
   * @param {string} end_date
   * @returns {string} Resource name string.
   */
  adGroupSimulationPath(customerId:string,adGroupId:string,type:string,modificationMethod:string,startDate:string,endDate:string) {
    return this.pathTemplates.adGroupSimulationPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      type: type,
      modification_method: modificationMethod,
      start_date: startDate,
      end_date: endDate,
    });
  }

  /**
   * Parse the customer_id from AdGroupSimulation resource.
   *
   * @param {string} adGroupSimulationName
   *   A fully-qualified path representing AdGroupSimulation resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdGroupSimulationName(adGroupSimulationName: string) {
    return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdGroupSimulation resource.
   *
   * @param {string} adGroupSimulationName
   *   A fully-qualified path representing AdGroupSimulation resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdGroupSimulationName(adGroupSimulationName: string) {
    return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).ad_group_id;
  }

  /**
   * Parse the type from AdGroupSimulation resource.
   *
   * @param {string} adGroupSimulationName
   *   A fully-qualified path representing AdGroupSimulation resource.
   * @returns {string} A string representing the type.
   */
  matchTypeFromAdGroupSimulationName(adGroupSimulationName: string) {
    return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).type;
  }

  /**
   * Parse the modification_method from AdGroupSimulation resource.
   *
   * @param {string} adGroupSimulationName
   *   A fully-qualified path representing AdGroupSimulation resource.
   * @returns {string} A string representing the modification_method.
   */
  matchModificationMethodFromAdGroupSimulationName(adGroupSimulationName: string) {
    return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).modification_method;
  }

  /**
   * Parse the start_date from AdGroupSimulation resource.
   *
   * @param {string} adGroupSimulationName
   *   A fully-qualified path representing AdGroupSimulation resource.
   * @returns {string} A string representing the start_date.
   */
  matchStartDateFromAdGroupSimulationName(adGroupSimulationName: string) {
    return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).start_date;
  }

  /**
   * Parse the end_date from AdGroupSimulation resource.
   *
   * @param {string} adGroupSimulationName
   *   A fully-qualified path representing AdGroupSimulation resource.
   * @returns {string} A string representing the end_date.
   */
  matchEndDateFromAdGroupSimulationName(adGroupSimulationName: string) {
    return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).end_date;
  }

  /**
   * Return a fully-qualified adParameter resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @param {string} parameter_index
   * @returns {string} Resource name string.
   */
  adParameterPath(customerId:string,adGroupId:string,criterionId:string,parameterIndex:string) {
    return this.pathTemplates.adParameterPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
      parameter_index: parameterIndex,
    });
  }

  /**
   * Parse the customer_id from AdParameter resource.
   *
   * @param {string} adParameterName
   *   A fully-qualified path representing AdParameter resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdParameterName(adParameterName: string) {
    return this.pathTemplates.adParameterPathTemplate.match(adParameterName).customer_id;
  }

  /**
   * Parse the ad_group_id from AdParameter resource.
   *
   * @param {string} adParameterName
   *   A fully-qualified path representing AdParameter resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAdParameterName(adParameterName: string) {
    return this.pathTemplates.adParameterPathTemplate.match(adParameterName).ad_group_id;
  }

  /**
   * Parse the criterion_id from AdParameter resource.
   *
   * @param {string} adParameterName
   *   A fully-qualified path representing AdParameter resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromAdParameterName(adParameterName: string) {
    return this.pathTemplates.adParameterPathTemplate.match(adParameterName).criterion_id;
  }

  /**
   * Parse the parameter_index from AdParameter resource.
   *
   * @param {string} adParameterName
   *   A fully-qualified path representing AdParameter resource.
   * @returns {string} A string representing the parameter_index.
   */
  matchParameterIndexFromAdParameterName(adParameterName: string) {
    return this.pathTemplates.adParameterPathTemplate.match(adParameterName).parameter_index;
  }

  /**
   * Return a fully-qualified adScheduleView resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  adScheduleViewPath(customerId:string,campaignId:string,criterionId:string) {
    return this.pathTemplates.adScheduleViewPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from AdScheduleView resource.
   *
   * @param {string} adScheduleViewName
   *   A fully-qualified path representing AdScheduleView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAdScheduleViewName(adScheduleViewName: string) {
    return this.pathTemplates.adScheduleViewPathTemplate.match(adScheduleViewName).customer_id;
  }

  /**
   * Parse the campaign_id from AdScheduleView resource.
   *
   * @param {string} adScheduleViewName
   *   A fully-qualified path representing AdScheduleView resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromAdScheduleViewName(adScheduleViewName: string) {
    return this.pathTemplates.adScheduleViewPathTemplate.match(adScheduleViewName).campaign_id;
  }

  /**
   * Parse the criterion_id from AdScheduleView resource.
   *
   * @param {string} adScheduleViewName
   *   A fully-qualified path representing AdScheduleView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromAdScheduleViewName(adScheduleViewName: string) {
    return this.pathTemplates.adScheduleViewPathTemplate.match(adScheduleViewName).criterion_id;
  }

  /**
   * Return a fully-qualified ageRangeView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  ageRangeViewPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.ageRangeViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from AgeRangeView resource.
   *
   * @param {string} ageRangeViewName
   *   A fully-qualified path representing AgeRangeView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAgeRangeViewName(ageRangeViewName: string) {
    return this.pathTemplates.ageRangeViewPathTemplate.match(ageRangeViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from AgeRangeView resource.
   *
   * @param {string} ageRangeViewName
   *   A fully-qualified path representing AgeRangeView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromAgeRangeViewName(ageRangeViewName: string) {
    return this.pathTemplates.ageRangeViewPathTemplate.match(ageRangeViewName).ad_group_id;
  }

  /**
   * Parse the criterion_id from AgeRangeView resource.
   *
   * @param {string} ageRangeViewName
   *   A fully-qualified path representing AgeRangeView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromAgeRangeViewName(ageRangeViewName: string) {
    return this.pathTemplates.ageRangeViewPathTemplate.match(ageRangeViewName).criterion_id;
  }

  /**
   * Return a fully-qualified asset resource name string.
   *
   * @param {string} customer_id
   * @param {string} asset_id
   * @returns {string} Resource name string.
   */
  assetPath(customerId:string,assetId:string) {
    return this.pathTemplates.assetPathTemplate.render({
      customer_id: customerId,
      asset_id: assetId,
    });
  }

  /**
   * Parse the customer_id from Asset resource.
   *
   * @param {string} assetName
   *   A fully-qualified path representing Asset resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromAssetName(assetName: string) {
    return this.pathTemplates.assetPathTemplate.match(assetName).customer_id;
  }

  /**
   * Parse the asset_id from Asset resource.
   *
   * @param {string} assetName
   *   A fully-qualified path representing Asset resource.
   * @returns {string} A string representing the asset_id.
   */
  matchAssetIdFromAssetName(assetName: string) {
    return this.pathTemplates.assetPathTemplate.match(assetName).asset_id;
  }

  /**
   * Return a fully-qualified batchJob resource name string.
   *
   * @param {string} customer_id
   * @param {string} batch_job_id
   * @returns {string} Resource name string.
   */
  batchJobPath(customerId:string,batchJobId:string) {
    return this.pathTemplates.batchJobPathTemplate.render({
      customer_id: customerId,
      batch_job_id: batchJobId,
    });
  }

  /**
   * Parse the customer_id from BatchJob resource.
   *
   * @param {string} batchJobName
   *   A fully-qualified path representing BatchJob resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromBatchJobName(batchJobName: string) {
    return this.pathTemplates.batchJobPathTemplate.match(batchJobName).customer_id;
  }

  /**
   * Parse the batch_job_id from BatchJob resource.
   *
   * @param {string} batchJobName
   *   A fully-qualified path representing BatchJob resource.
   * @returns {string} A string representing the batch_job_id.
   */
  matchBatchJobIdFromBatchJobName(batchJobName: string) {
    return this.pathTemplates.batchJobPathTemplate.match(batchJobName).batch_job_id;
  }

  /**
   * Return a fully-qualified biddingStrategy resource name string.
   *
   * @param {string} customer_id
   * @param {string} bidding_strategy_id
   * @returns {string} Resource name string.
   */
  biddingStrategyPath(customerId:string,biddingStrategyId:string) {
    return this.pathTemplates.biddingStrategyPathTemplate.render({
      customer_id: customerId,
      bidding_strategy_id: biddingStrategyId,
    });
  }

  /**
   * Parse the customer_id from BiddingStrategy resource.
   *
   * @param {string} biddingStrategyName
   *   A fully-qualified path representing BiddingStrategy resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromBiddingStrategyName(biddingStrategyName: string) {
    return this.pathTemplates.biddingStrategyPathTemplate.match(biddingStrategyName).customer_id;
  }

  /**
   * Parse the bidding_strategy_id from BiddingStrategy resource.
   *
   * @param {string} biddingStrategyName
   *   A fully-qualified path representing BiddingStrategy resource.
   * @returns {string} A string representing the bidding_strategy_id.
   */
  matchBiddingStrategyIdFromBiddingStrategyName(biddingStrategyName: string) {
    return this.pathTemplates.biddingStrategyPathTemplate.match(biddingStrategyName).bidding_strategy_id;
  }

  /**
   * Return a fully-qualified billingSetup resource name string.
   *
   * @param {string} customer_id
   * @param {string} billing_setup_id
   * @returns {string} Resource name string.
   */
  billingSetupPath(customerId:string,billingSetupId:string) {
    return this.pathTemplates.billingSetupPathTemplate.render({
      customer_id: customerId,
      billing_setup_id: billingSetupId,
    });
  }

  /**
   * Parse the customer_id from BillingSetup resource.
   *
   * @param {string} billingSetupName
   *   A fully-qualified path representing BillingSetup resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromBillingSetupName(billingSetupName: string) {
    return this.pathTemplates.billingSetupPathTemplate.match(billingSetupName).customer_id;
  }

  /**
   * Parse the billing_setup_id from BillingSetup resource.
   *
   * @param {string} billingSetupName
   *   A fully-qualified path representing BillingSetup resource.
   * @returns {string} A string representing the billing_setup_id.
   */
  matchBillingSetupIdFromBillingSetupName(billingSetupName: string) {
    return this.pathTemplates.billingSetupPathTemplate.match(billingSetupName).billing_setup_id;
  }

  /**
   * Return a fully-qualified campaign resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @returns {string} Resource name string.
   */
  campaignPath(customerId:string,campaignId:string) {
    return this.pathTemplates.campaignPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
    });
  }

  /**
   * Parse the customer_id from Campaign resource.
   *
   * @param {string} campaignName
   *   A fully-qualified path representing Campaign resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignName(campaignName: string) {
    return this.pathTemplates.campaignPathTemplate.match(campaignName).customer_id;
  }

  /**
   * Parse the campaign_id from Campaign resource.
   *
   * @param {string} campaignName
   *   A fully-qualified path representing Campaign resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromCampaignName(campaignName: string) {
    return this.pathTemplates.campaignPathTemplate.match(campaignName).campaign_id;
  }

  /**
   * Return a fully-qualified campaignAsset resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} asset_id
   * @param {string} field_type
   * @returns {string} Resource name string.
   */
  campaignAssetPath(customerId:string,campaignId:string,assetId:string,fieldType:string) {
    return this.pathTemplates.campaignAssetPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      asset_id: assetId,
      field_type: fieldType,
    });
  }

  /**
   * Parse the customer_id from CampaignAsset resource.
   *
   * @param {string} campaignAssetName
   *   A fully-qualified path representing CampaignAsset resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignAssetName(campaignAssetName: string) {
    return this.pathTemplates.campaignAssetPathTemplate.match(campaignAssetName).customer_id;
  }

  /**
   * Parse the campaign_id from CampaignAsset resource.
   *
   * @param {string} campaignAssetName
   *   A fully-qualified path representing CampaignAsset resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromCampaignAssetName(campaignAssetName: string) {
    return this.pathTemplates.campaignAssetPathTemplate.match(campaignAssetName).campaign_id;
  }

  /**
   * Parse the asset_id from CampaignAsset resource.
   *
   * @param {string} campaignAssetName
   *   A fully-qualified path representing CampaignAsset resource.
   * @returns {string} A string representing the asset_id.
   */
  matchAssetIdFromCampaignAssetName(campaignAssetName: string) {
    return this.pathTemplates.campaignAssetPathTemplate.match(campaignAssetName).asset_id;
  }

  /**
   * Parse the field_type from CampaignAsset resource.
   *
   * @param {string} campaignAssetName
   *   A fully-qualified path representing CampaignAsset resource.
   * @returns {string} A string representing the field_type.
   */
  matchFieldTypeFromCampaignAssetName(campaignAssetName: string) {
    return this.pathTemplates.campaignAssetPathTemplate.match(campaignAssetName).field_type;
  }

  /**
   * Return a fully-qualified campaignAudienceView resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  campaignAudienceViewPath(customerId:string,campaignId:string,criterionId:string) {
    return this.pathTemplates.campaignAudienceViewPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from CampaignAudienceView resource.
   *
   * @param {string} campaignAudienceViewName
   *   A fully-qualified path representing CampaignAudienceView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignAudienceViewName(campaignAudienceViewName: string) {
    return this.pathTemplates.campaignAudienceViewPathTemplate.match(campaignAudienceViewName).customer_id;
  }

  /**
   * Parse the campaign_id from CampaignAudienceView resource.
   *
   * @param {string} campaignAudienceViewName
   *   A fully-qualified path representing CampaignAudienceView resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromCampaignAudienceViewName(campaignAudienceViewName: string) {
    return this.pathTemplates.campaignAudienceViewPathTemplate.match(campaignAudienceViewName).campaign_id;
  }

  /**
   * Parse the criterion_id from CampaignAudienceView resource.
   *
   * @param {string} campaignAudienceViewName
   *   A fully-qualified path representing CampaignAudienceView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromCampaignAudienceViewName(campaignAudienceViewName: string) {
    return this.pathTemplates.campaignAudienceViewPathTemplate.match(campaignAudienceViewName).criterion_id;
  }

  /**
   * Return a fully-qualified campaignBidModifier resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  campaignBidModifierPath(customerId:string,campaignId:string,criterionId:string) {
    return this.pathTemplates.campaignBidModifierPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from CampaignBidModifier resource.
   *
   * @param {string} campaignBidModifierName
   *   A fully-qualified path representing CampaignBidModifier resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignBidModifierName(campaignBidModifierName: string) {
    return this.pathTemplates.campaignBidModifierPathTemplate.match(campaignBidModifierName).customer_id;
  }

  /**
   * Parse the campaign_id from CampaignBidModifier resource.
   *
   * @param {string} campaignBidModifierName
   *   A fully-qualified path representing CampaignBidModifier resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromCampaignBidModifierName(campaignBidModifierName: string) {
    return this.pathTemplates.campaignBidModifierPathTemplate.match(campaignBidModifierName).campaign_id;
  }

  /**
   * Parse the criterion_id from CampaignBidModifier resource.
   *
   * @param {string} campaignBidModifierName
   *   A fully-qualified path representing CampaignBidModifier resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromCampaignBidModifierName(campaignBidModifierName: string) {
    return this.pathTemplates.campaignBidModifierPathTemplate.match(campaignBidModifierName).criterion_id;
  }

  /**
   * Return a fully-qualified campaignBudget resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_budget_id
   * @returns {string} Resource name string.
   */
  campaignBudgetPath(customerId:string,campaignBudgetId:string) {
    return this.pathTemplates.campaignBudgetPathTemplate.render({
      customer_id: customerId,
      campaign_budget_id: campaignBudgetId,
    });
  }

  /**
   * Parse the customer_id from CampaignBudget resource.
   *
   * @param {string} campaignBudgetName
   *   A fully-qualified path representing CampaignBudget resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignBudgetName(campaignBudgetName: string) {
    return this.pathTemplates.campaignBudgetPathTemplate.match(campaignBudgetName).customer_id;
  }

  /**
   * Parse the campaign_budget_id from CampaignBudget resource.
   *
   * @param {string} campaignBudgetName
   *   A fully-qualified path representing CampaignBudget resource.
   * @returns {string} A string representing the campaign_budget_id.
   */
  matchCampaignBudgetIdFromCampaignBudgetName(campaignBudgetName: string) {
    return this.pathTemplates.campaignBudgetPathTemplate.match(campaignBudgetName).campaign_budget_id;
  }

  /**
   * Return a fully-qualified campaignCriterion resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  campaignCriterionPath(customerId:string,campaignId:string,criterionId:string) {
    return this.pathTemplates.campaignCriterionPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from CampaignCriterion resource.
   *
   * @param {string} campaignCriterionName
   *   A fully-qualified path representing CampaignCriterion resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignCriterionName(campaignCriterionName: string) {
    return this.pathTemplates.campaignCriterionPathTemplate.match(campaignCriterionName).customer_id;
  }

  /**
   * Parse the campaign_id from CampaignCriterion resource.
   *
   * @param {string} campaignCriterionName
   *   A fully-qualified path representing CampaignCriterion resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromCampaignCriterionName(campaignCriterionName: string) {
    return this.pathTemplates.campaignCriterionPathTemplate.match(campaignCriterionName).campaign_id;
  }

  /**
   * Parse the criterion_id from CampaignCriterion resource.
   *
   * @param {string} campaignCriterionName
   *   A fully-qualified path representing CampaignCriterion resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromCampaignCriterionName(campaignCriterionName: string) {
    return this.pathTemplates.campaignCriterionPathTemplate.match(campaignCriterionName).criterion_id;
  }

  /**
   * Return a fully-qualified campaignCriterionSimulation resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} criterion_id
   * @param {string} type
   * @param {string} modification_method
   * @param {string} start_date
   * @param {string} end_date
   * @returns {string} Resource name string.
   */
  campaignCriterionSimulationPath(customerId:string,campaignId:string,criterionId:string,type:string,modificationMethod:string,startDate:string,endDate:string) {
    return this.pathTemplates.campaignCriterionSimulationPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      criterion_id: criterionId,
      type: type,
      modification_method: modificationMethod,
      start_date: startDate,
      end_date: endDate,
    });
  }

  /**
   * Parse the customer_id from CampaignCriterionSimulation resource.
   *
   * @param {string} campaignCriterionSimulationName
   *   A fully-qualified path representing CampaignCriterionSimulation resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignCriterionSimulationName(campaignCriterionSimulationName: string) {
    return this.pathTemplates.campaignCriterionSimulationPathTemplate.match(campaignCriterionSimulationName).customer_id;
  }

  /**
   * Parse the campaign_id from CampaignCriterionSimulation resource.
   *
   * @param {string} campaignCriterionSimulationName
   *   A fully-qualified path representing CampaignCriterionSimulation resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromCampaignCriterionSimulationName(campaignCriterionSimulationName: string) {
    return this.pathTemplates.campaignCriterionSimulationPathTemplate.match(campaignCriterionSimulationName).campaign_id;
  }

  /**
   * Parse the criterion_id from CampaignCriterionSimulation resource.
   *
   * @param {string} campaignCriterionSimulationName
   *   A fully-qualified path representing CampaignCriterionSimulation resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromCampaignCriterionSimulationName(campaignCriterionSimulationName: string) {
    return this.pathTemplates.campaignCriterionSimulationPathTemplate.match(campaignCriterionSimulationName).criterion_id;
  }

  /**
   * Parse the type from CampaignCriterionSimulation resource.
   *
   * @param {string} campaignCriterionSimulationName
   *   A fully-qualified path representing CampaignCriterionSimulation resource.
   * @returns {string} A string representing the type.
   */
  matchTypeFromCampaignCriterionSimulationName(campaignCriterionSimulationName: string) {
    return this.pathTemplates.campaignCriterionSimulationPathTemplate.match(campaignCriterionSimulationName).type;
  }

  /**
   * Parse the modification_method from CampaignCriterionSimulation resource.
   *
   * @param {string} campaignCriterionSimulationName
   *   A fully-qualified path representing CampaignCriterionSimulation resource.
   * @returns {string} A string representing the modification_method.
   */
  matchModificationMethodFromCampaignCriterionSimulationName(campaignCriterionSimulationName: string) {
    return this.pathTemplates.campaignCriterionSimulationPathTemplate.match(campaignCriterionSimulationName).modification_method;
  }

  /**
   * Parse the start_date from CampaignCriterionSimulation resource.
   *
   * @param {string} campaignCriterionSimulationName
   *   A fully-qualified path representing CampaignCriterionSimulation resource.
   * @returns {string} A string representing the start_date.
   */
  matchStartDateFromCampaignCriterionSimulationName(campaignCriterionSimulationName: string) {
    return this.pathTemplates.campaignCriterionSimulationPathTemplate.match(campaignCriterionSimulationName).start_date;
  }

  /**
   * Parse the end_date from CampaignCriterionSimulation resource.
   *
   * @param {string} campaignCriterionSimulationName
   *   A fully-qualified path representing CampaignCriterionSimulation resource.
   * @returns {string} A string representing the end_date.
   */
  matchEndDateFromCampaignCriterionSimulationName(campaignCriterionSimulationName: string) {
    return this.pathTemplates.campaignCriterionSimulationPathTemplate.match(campaignCriterionSimulationName).end_date;
  }

  /**
   * Return a fully-qualified campaignDraft resource name string.
   *
   * @param {string} customer_id
   * @param {string} base_campaign_id
   * @param {string} draft_id
   * @returns {string} Resource name string.
   */
  campaignDraftPath(customerId:string,baseCampaignId:string,draftId:string) {
    return this.pathTemplates.campaignDraftPathTemplate.render({
      customer_id: customerId,
      base_campaign_id: baseCampaignId,
      draft_id: draftId,
    });
  }

  /**
   * Parse the customer_id from CampaignDraft resource.
   *
   * @param {string} campaignDraftName
   *   A fully-qualified path representing CampaignDraft resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignDraftName(campaignDraftName: string) {
    return this.pathTemplates.campaignDraftPathTemplate.match(campaignDraftName).customer_id;
  }

  /**
   * Parse the base_campaign_id from CampaignDraft resource.
   *
   * @param {string} campaignDraftName
   *   A fully-qualified path representing CampaignDraft resource.
   * @returns {string} A string representing the base_campaign_id.
   */
  matchBaseCampaignIdFromCampaignDraftName(campaignDraftName: string) {
    return this.pathTemplates.campaignDraftPathTemplate.match(campaignDraftName).base_campaign_id;
  }

  /**
   * Parse the draft_id from CampaignDraft resource.
   *
   * @param {string} campaignDraftName
   *   A fully-qualified path representing CampaignDraft resource.
   * @returns {string} A string representing the draft_id.
   */
  matchDraftIdFromCampaignDraftName(campaignDraftName: string) {
    return this.pathTemplates.campaignDraftPathTemplate.match(campaignDraftName).draft_id;
  }

  /**
   * Return a fully-qualified campaignExperiment resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_experiment_id
   * @returns {string} Resource name string.
   */
  campaignExperimentPath(customerId:string,campaignExperimentId:string) {
    return this.pathTemplates.campaignExperimentPathTemplate.render({
      customer_id: customerId,
      campaign_experiment_id: campaignExperimentId,
    });
  }

  /**
   * Parse the customer_id from CampaignExperiment resource.
   *
   * @param {string} campaignExperimentName
   *   A fully-qualified path representing CampaignExperiment resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignExperimentName(campaignExperimentName: string) {
    return this.pathTemplates.campaignExperimentPathTemplate.match(campaignExperimentName).customer_id;
  }

  /**
   * Parse the campaign_experiment_id from CampaignExperiment resource.
   *
   * @param {string} campaignExperimentName
   *   A fully-qualified path representing CampaignExperiment resource.
   * @returns {string} A string representing the campaign_experiment_id.
   */
  matchCampaignExperimentIdFromCampaignExperimentName(campaignExperimentName: string) {
    return this.pathTemplates.campaignExperimentPathTemplate.match(campaignExperimentName).campaign_experiment_id;
  }

  /**
   * Return a fully-qualified campaignExtensionSetting resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} extension_type
   * @returns {string} Resource name string.
   */
  campaignExtensionSettingPath(customerId:string,campaignId:string,extensionType:string) {
    return this.pathTemplates.campaignExtensionSettingPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      extension_type: extensionType,
    });
  }

  /**
   * Parse the customer_id from CampaignExtensionSetting resource.
   *
   * @param {string} campaignExtensionSettingName
   *   A fully-qualified path representing CampaignExtensionSetting resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignExtensionSettingName(campaignExtensionSettingName: string) {
    return this.pathTemplates.campaignExtensionSettingPathTemplate.match(campaignExtensionSettingName).customer_id;
  }

  /**
   * Parse the campaign_id from CampaignExtensionSetting resource.
   *
   * @param {string} campaignExtensionSettingName
   *   A fully-qualified path representing CampaignExtensionSetting resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromCampaignExtensionSettingName(campaignExtensionSettingName: string) {
    return this.pathTemplates.campaignExtensionSettingPathTemplate.match(campaignExtensionSettingName).campaign_id;
  }

  /**
   * Parse the extension_type from CampaignExtensionSetting resource.
   *
   * @param {string} campaignExtensionSettingName
   *   A fully-qualified path representing CampaignExtensionSetting resource.
   * @returns {string} A string representing the extension_type.
   */
  matchExtensionTypeFromCampaignExtensionSettingName(campaignExtensionSettingName: string) {
    return this.pathTemplates.campaignExtensionSettingPathTemplate.match(campaignExtensionSettingName).extension_type;
  }

  /**
   * Return a fully-qualified campaignFeed resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} feed_id
   * @returns {string} Resource name string.
   */
  campaignFeedPath(customerId:string,campaignId:string,feedId:string) {
    return this.pathTemplates.campaignFeedPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      feed_id: feedId,
    });
  }

  /**
   * Parse the customer_id from CampaignFeed resource.
   *
   * @param {string} campaignFeedName
   *   A fully-qualified path representing CampaignFeed resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignFeedName(campaignFeedName: string) {
    return this.pathTemplates.campaignFeedPathTemplate.match(campaignFeedName).customer_id;
  }

  /**
   * Parse the campaign_id from CampaignFeed resource.
   *
   * @param {string} campaignFeedName
   *   A fully-qualified path representing CampaignFeed resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromCampaignFeedName(campaignFeedName: string) {
    return this.pathTemplates.campaignFeedPathTemplate.match(campaignFeedName).campaign_id;
  }

  /**
   * Parse the feed_id from CampaignFeed resource.
   *
   * @param {string} campaignFeedName
   *   A fully-qualified path representing CampaignFeed resource.
   * @returns {string} A string representing the feed_id.
   */
  matchFeedIdFromCampaignFeedName(campaignFeedName: string) {
    return this.pathTemplates.campaignFeedPathTemplate.match(campaignFeedName).feed_id;
  }

  /**
   * Return a fully-qualified campaignLabel resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} label_id
   * @returns {string} Resource name string.
   */
  campaignLabelPath(customerId:string,campaignId:string,labelId:string) {
    return this.pathTemplates.campaignLabelPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      label_id: labelId,
    });
  }

  /**
   * Parse the customer_id from CampaignLabel resource.
   *
   * @param {string} campaignLabelName
   *   A fully-qualified path representing CampaignLabel resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignLabelName(campaignLabelName: string) {
    return this.pathTemplates.campaignLabelPathTemplate.match(campaignLabelName).customer_id;
  }

  /**
   * Parse the campaign_id from CampaignLabel resource.
   *
   * @param {string} campaignLabelName
   *   A fully-qualified path representing CampaignLabel resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromCampaignLabelName(campaignLabelName: string) {
    return this.pathTemplates.campaignLabelPathTemplate.match(campaignLabelName).campaign_id;
  }

  /**
   * Parse the label_id from CampaignLabel resource.
   *
   * @param {string} campaignLabelName
   *   A fully-qualified path representing CampaignLabel resource.
   * @returns {string} A string representing the label_id.
   */
  matchLabelIdFromCampaignLabelName(campaignLabelName: string) {
    return this.pathTemplates.campaignLabelPathTemplate.match(campaignLabelName).label_id;
  }

  /**
   * Return a fully-qualified campaignSharedSet resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} shared_set_id
   * @returns {string} Resource name string.
   */
  campaignSharedSetPath(customerId:string,campaignId:string,sharedSetId:string) {
    return this.pathTemplates.campaignSharedSetPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      shared_set_id: sharedSetId,
    });
  }

  /**
   * Parse the customer_id from CampaignSharedSet resource.
   *
   * @param {string} campaignSharedSetName
   *   A fully-qualified path representing CampaignSharedSet resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCampaignSharedSetName(campaignSharedSetName: string) {
    return this.pathTemplates.campaignSharedSetPathTemplate.match(campaignSharedSetName).customer_id;
  }

  /**
   * Parse the campaign_id from CampaignSharedSet resource.
   *
   * @param {string} campaignSharedSetName
   *   A fully-qualified path representing CampaignSharedSet resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromCampaignSharedSetName(campaignSharedSetName: string) {
    return this.pathTemplates.campaignSharedSetPathTemplate.match(campaignSharedSetName).campaign_id;
  }

  /**
   * Parse the shared_set_id from CampaignSharedSet resource.
   *
   * @param {string} campaignSharedSetName
   *   A fully-qualified path representing CampaignSharedSet resource.
   * @returns {string} A string representing the shared_set_id.
   */
  matchSharedSetIdFromCampaignSharedSetName(campaignSharedSetName: string) {
    return this.pathTemplates.campaignSharedSetPathTemplate.match(campaignSharedSetName).shared_set_id;
  }

  /**
   * Return a fully-qualified carrierConstant resource name string.
   *
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  carrierConstantPath(criterionId:string) {
    return this.pathTemplates.carrierConstantPathTemplate.render({
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the criterion_id from CarrierConstant resource.
   *
   * @param {string} carrierConstantName
   *   A fully-qualified path representing CarrierConstant resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromCarrierConstantName(carrierConstantName: string) {
    return this.pathTemplates.carrierConstantPathTemplate.match(carrierConstantName).criterion_id;
  }

  /**
   * Return a fully-qualified changeEvent resource name string.
   *
   * @param {string} customer_id
   * @param {string} timestamp_micros
   * @param {string} command_index
   * @param {string} mutate_index
   * @returns {string} Resource name string.
   */
  changeEventPath(customerId:string,timestampMicros:string,commandIndex:string,mutateIndex:string) {
    return this.pathTemplates.changeEventPathTemplate.render({
      customer_id: customerId,
      timestamp_micros: timestampMicros,
      command_index: commandIndex,
      mutate_index: mutateIndex,
    });
  }

  /**
   * Parse the customer_id from ChangeEvent resource.
   *
   * @param {string} changeEventName
   *   A fully-qualified path representing ChangeEvent resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromChangeEventName(changeEventName: string) {
    return this.pathTemplates.changeEventPathTemplate.match(changeEventName).customer_id;
  }

  /**
   * Parse the timestamp_micros from ChangeEvent resource.
   *
   * @param {string} changeEventName
   *   A fully-qualified path representing ChangeEvent resource.
   * @returns {string} A string representing the timestamp_micros.
   */
  matchTimestampMicrosFromChangeEventName(changeEventName: string) {
    return this.pathTemplates.changeEventPathTemplate.match(changeEventName).timestamp_micros;
  }

  /**
   * Parse the command_index from ChangeEvent resource.
   *
   * @param {string} changeEventName
   *   A fully-qualified path representing ChangeEvent resource.
   * @returns {string} A string representing the command_index.
   */
  matchCommandIndexFromChangeEventName(changeEventName: string) {
    return this.pathTemplates.changeEventPathTemplate.match(changeEventName).command_index;
  }

  /**
   * Parse the mutate_index from ChangeEvent resource.
   *
   * @param {string} changeEventName
   *   A fully-qualified path representing ChangeEvent resource.
   * @returns {string} A string representing the mutate_index.
   */
  matchMutateIndexFromChangeEventName(changeEventName: string) {
    return this.pathTemplates.changeEventPathTemplate.match(changeEventName).mutate_index;
  }

  /**
   * Return a fully-qualified changeStatus resource name string.
   *
   * @param {string} customer_id
   * @param {string} change_status_id
   * @returns {string} Resource name string.
   */
  changeStatusPath(customerId:string,changeStatusId:string) {
    return this.pathTemplates.changeStatusPathTemplate.render({
      customer_id: customerId,
      change_status_id: changeStatusId,
    });
  }

  /**
   * Parse the customer_id from ChangeStatus resource.
   *
   * @param {string} changeStatusName
   *   A fully-qualified path representing ChangeStatus resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromChangeStatusName(changeStatusName: string) {
    return this.pathTemplates.changeStatusPathTemplate.match(changeStatusName).customer_id;
  }

  /**
   * Parse the change_status_id from ChangeStatus resource.
   *
   * @param {string} changeStatusName
   *   A fully-qualified path representing ChangeStatus resource.
   * @returns {string} A string representing the change_status_id.
   */
  matchChangeStatusIdFromChangeStatusName(changeStatusName: string) {
    return this.pathTemplates.changeStatusPathTemplate.match(changeStatusName).change_status_id;
  }

  /**
   * Return a fully-qualified clickView resource name string.
   *
   * @param {string} customer_id
   * @param {string} date
   * @param {string} gclid
   * @returns {string} Resource name string.
   */
  clickViewPath(customerId:string,date:string,gclid:string) {
    return this.pathTemplates.clickViewPathTemplate.render({
      customer_id: customerId,
      date: date,
      gclid: gclid,
    });
  }

  /**
   * Parse the customer_id from ClickView resource.
   *
   * @param {string} clickViewName
   *   A fully-qualified path representing ClickView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromClickViewName(clickViewName: string) {
    return this.pathTemplates.clickViewPathTemplate.match(clickViewName).customer_id;
  }

  /**
   * Parse the date from ClickView resource.
   *
   * @param {string} clickViewName
   *   A fully-qualified path representing ClickView resource.
   * @returns {string} A string representing the date.
   */
  matchDateFromClickViewName(clickViewName: string) {
    return this.pathTemplates.clickViewPathTemplate.match(clickViewName).date;
  }

  /**
   * Parse the gclid from ClickView resource.
   *
   * @param {string} clickViewName
   *   A fully-qualified path representing ClickView resource.
   * @returns {string} A string representing the gclid.
   */
  matchGclidFromClickViewName(clickViewName: string) {
    return this.pathTemplates.clickViewPathTemplate.match(clickViewName).gclid;
  }

  /**
   * Return a fully-qualified combinedAudience resource name string.
   *
   * @param {string} customer_id
   * @param {string} combined_audience_id
   * @returns {string} Resource name string.
   */
  combinedAudiencePath(customerId:string,combinedAudienceId:string) {
    return this.pathTemplates.combinedAudiencePathTemplate.render({
      customer_id: customerId,
      combined_audience_id: combinedAudienceId,
    });
  }

  /**
   * Parse the customer_id from CombinedAudience resource.
   *
   * @param {string} combinedAudienceName
   *   A fully-qualified path representing CombinedAudience resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCombinedAudienceName(combinedAudienceName: string) {
    return this.pathTemplates.combinedAudiencePathTemplate.match(combinedAudienceName).customer_id;
  }

  /**
   * Parse the combined_audience_id from CombinedAudience resource.
   *
   * @param {string} combinedAudienceName
   *   A fully-qualified path representing CombinedAudience resource.
   * @returns {string} A string representing the combined_audience_id.
   */
  matchCombinedAudienceIdFromCombinedAudienceName(combinedAudienceName: string) {
    return this.pathTemplates.combinedAudiencePathTemplate.match(combinedAudienceName).combined_audience_id;
  }

  /**
   * Return a fully-qualified conversionAction resource name string.
   *
   * @param {string} customer_id
   * @param {string} conversion_action_id
   * @returns {string} Resource name string.
   */
  conversionActionPath(customerId:string,conversionActionId:string) {
    return this.pathTemplates.conversionActionPathTemplate.render({
      customer_id: customerId,
      conversion_action_id: conversionActionId,
    });
  }

  /**
   * Parse the customer_id from ConversionAction resource.
   *
   * @param {string} conversionActionName
   *   A fully-qualified path representing ConversionAction resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromConversionActionName(conversionActionName: string) {
    return this.pathTemplates.conversionActionPathTemplate.match(conversionActionName).customer_id;
  }

  /**
   * Parse the conversion_action_id from ConversionAction resource.
   *
   * @param {string} conversionActionName
   *   A fully-qualified path representing ConversionAction resource.
   * @returns {string} A string representing the conversion_action_id.
   */
  matchConversionActionIdFromConversionActionName(conversionActionName: string) {
    return this.pathTemplates.conversionActionPathTemplate.match(conversionActionName).conversion_action_id;
  }

  /**
   * Return a fully-qualified currencyConstant resource name string.
   *
   * @param {string} code
   * @returns {string} Resource name string.
   */
  currencyConstantPath(code:string) {
    return this.pathTemplates.currencyConstantPathTemplate.render({
      code: code,
    });
  }

  /**
   * Parse the code from CurrencyConstant resource.
   *
   * @param {string} currencyConstantName
   *   A fully-qualified path representing CurrencyConstant resource.
   * @returns {string} A string representing the code.
   */
  matchCodeFromCurrencyConstantName(currencyConstantName: string) {
    return this.pathTemplates.currencyConstantPathTemplate.match(currencyConstantName).code;
  }

  /**
   * Return a fully-qualified customAudience resource name string.
   *
   * @param {string} customer_id
   * @param {string} custom_audience_id
   * @returns {string} Resource name string.
   */
  customAudiencePath(customerId:string,customAudienceId:string) {
    return this.pathTemplates.customAudiencePathTemplate.render({
      customer_id: customerId,
      custom_audience_id: customAudienceId,
    });
  }

  /**
   * Parse the customer_id from CustomAudience resource.
   *
   * @param {string} customAudienceName
   *   A fully-qualified path representing CustomAudience resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCustomAudienceName(customAudienceName: string) {
    return this.pathTemplates.customAudiencePathTemplate.match(customAudienceName).customer_id;
  }

  /**
   * Parse the custom_audience_id from CustomAudience resource.
   *
   * @param {string} customAudienceName
   *   A fully-qualified path representing CustomAudience resource.
   * @returns {string} A string representing the custom_audience_id.
   */
  matchCustomAudienceIdFromCustomAudienceName(customAudienceName: string) {
    return this.pathTemplates.customAudiencePathTemplate.match(customAudienceName).custom_audience_id;
  }

  /**
   * Return a fully-qualified customInterest resource name string.
   *
   * @param {string} customer_id
   * @param {string} custom_interest_id
   * @returns {string} Resource name string.
   */
  customInterestPath(customerId:string,customInterestId:string) {
    return this.pathTemplates.customInterestPathTemplate.render({
      customer_id: customerId,
      custom_interest_id: customInterestId,
    });
  }

  /**
   * Parse the customer_id from CustomInterest resource.
   *
   * @param {string} customInterestName
   *   A fully-qualified path representing CustomInterest resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCustomInterestName(customInterestName: string) {
    return this.pathTemplates.customInterestPathTemplate.match(customInterestName).customer_id;
  }

  /**
   * Parse the custom_interest_id from CustomInterest resource.
   *
   * @param {string} customInterestName
   *   A fully-qualified path representing CustomInterest resource.
   * @returns {string} A string representing the custom_interest_id.
   */
  matchCustomInterestIdFromCustomInterestName(customInterestName: string) {
    return this.pathTemplates.customInterestPathTemplate.match(customInterestName).custom_interest_id;
  }

  /**
   * Return a fully-qualified customer resource name string.
   *
   * @param {string} customer_id
   * @returns {string} Resource name string.
   */
  customerPath(customerId:string) {
    return this.pathTemplates.customerPathTemplate.render({
      customer_id: customerId,
    });
  }

  /**
   * Parse the customer_id from Customer resource.
   *
   * @param {string} customerName
   *   A fully-qualified path representing Customer resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCustomerName(customerName: string) {
    return this.pathTemplates.customerPathTemplate.match(customerName).customer_id;
  }

  /**
   * Return a fully-qualified customerClient resource name string.
   *
   * @param {string} customer_id
   * @param {string} client_customer_id
   * @returns {string} Resource name string.
   */
  customerClientPath(customerId:string,clientCustomerId:string) {
    return this.pathTemplates.customerClientPathTemplate.render({
      customer_id: customerId,
      client_customer_id: clientCustomerId,
    });
  }

  /**
   * Parse the customer_id from CustomerClient resource.
   *
   * @param {string} customerClientName
   *   A fully-qualified path representing CustomerClient resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCustomerClientName(customerClientName: string) {
    return this.pathTemplates.customerClientPathTemplate.match(customerClientName).customer_id;
  }

  /**
   * Parse the client_customer_id from CustomerClient resource.
   *
   * @param {string} customerClientName
   *   A fully-qualified path representing CustomerClient resource.
   * @returns {string} A string representing the client_customer_id.
   */
  matchClientCustomerIdFromCustomerClientName(customerClientName: string) {
    return this.pathTemplates.customerClientPathTemplate.match(customerClientName).client_customer_id;
  }

  /**
   * Return a fully-qualified customerClientLink resource name string.
   *
   * @param {string} customer_id
   * @param {string} client_customer_id
   * @param {string} manager_link_id
   * @returns {string} Resource name string.
   */
  customerClientLinkPath(customerId:string,clientCustomerId:string,managerLinkId:string) {
    return this.pathTemplates.customerClientLinkPathTemplate.render({
      customer_id: customerId,
      client_customer_id: clientCustomerId,
      manager_link_id: managerLinkId,
    });
  }

  /**
   * Parse the customer_id from CustomerClientLink resource.
   *
   * @param {string} customerClientLinkName
   *   A fully-qualified path representing CustomerClientLink resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCustomerClientLinkName(customerClientLinkName: string) {
    return this.pathTemplates.customerClientLinkPathTemplate.match(customerClientLinkName).customer_id;
  }

  /**
   * Parse the client_customer_id from CustomerClientLink resource.
   *
   * @param {string} customerClientLinkName
   *   A fully-qualified path representing CustomerClientLink resource.
   * @returns {string} A string representing the client_customer_id.
   */
  matchClientCustomerIdFromCustomerClientLinkName(customerClientLinkName: string) {
    return this.pathTemplates.customerClientLinkPathTemplate.match(customerClientLinkName).client_customer_id;
  }

  /**
   * Parse the manager_link_id from CustomerClientLink resource.
   *
   * @param {string} customerClientLinkName
   *   A fully-qualified path representing CustomerClientLink resource.
   * @returns {string} A string representing the manager_link_id.
   */
  matchManagerLinkIdFromCustomerClientLinkName(customerClientLinkName: string) {
    return this.pathTemplates.customerClientLinkPathTemplate.match(customerClientLinkName).manager_link_id;
  }

  /**
   * Return a fully-qualified customerExtensionSetting resource name string.
   *
   * @param {string} customer_id
   * @param {string} extension_type
   * @returns {string} Resource name string.
   */
  customerExtensionSettingPath(customerId:string,extensionType:string) {
    return this.pathTemplates.customerExtensionSettingPathTemplate.render({
      customer_id: customerId,
      extension_type: extensionType,
    });
  }

  /**
   * Parse the customer_id from CustomerExtensionSetting resource.
   *
   * @param {string} customerExtensionSettingName
   *   A fully-qualified path representing CustomerExtensionSetting resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCustomerExtensionSettingName(customerExtensionSettingName: string) {
    return this.pathTemplates.customerExtensionSettingPathTemplate.match(customerExtensionSettingName).customer_id;
  }

  /**
   * Parse the extension_type from CustomerExtensionSetting resource.
   *
   * @param {string} customerExtensionSettingName
   *   A fully-qualified path representing CustomerExtensionSetting resource.
   * @returns {string} A string representing the extension_type.
   */
  matchExtensionTypeFromCustomerExtensionSettingName(customerExtensionSettingName: string) {
    return this.pathTemplates.customerExtensionSettingPathTemplate.match(customerExtensionSettingName).extension_type;
  }

  /**
   * Return a fully-qualified customerFeed resource name string.
   *
   * @param {string} customer_id
   * @param {string} feed_id
   * @returns {string} Resource name string.
   */
  customerFeedPath(customerId:string,feedId:string) {
    return this.pathTemplates.customerFeedPathTemplate.render({
      customer_id: customerId,
      feed_id: feedId,
    });
  }

  /**
   * Parse the customer_id from CustomerFeed resource.
   *
   * @param {string} customerFeedName
   *   A fully-qualified path representing CustomerFeed resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCustomerFeedName(customerFeedName: string) {
    return this.pathTemplates.customerFeedPathTemplate.match(customerFeedName).customer_id;
  }

  /**
   * Parse the feed_id from CustomerFeed resource.
   *
   * @param {string} customerFeedName
   *   A fully-qualified path representing CustomerFeed resource.
   * @returns {string} A string representing the feed_id.
   */
  matchFeedIdFromCustomerFeedName(customerFeedName: string) {
    return this.pathTemplates.customerFeedPathTemplate.match(customerFeedName).feed_id;
  }

  /**
   * Return a fully-qualified customerLabel resource name string.
   *
   * @param {string} customer_id
   * @param {string} label_id
   * @returns {string} Resource name string.
   */
  customerLabelPath(customerId:string,labelId:string) {
    return this.pathTemplates.customerLabelPathTemplate.render({
      customer_id: customerId,
      label_id: labelId,
    });
  }

  /**
   * Parse the customer_id from CustomerLabel resource.
   *
   * @param {string} customerLabelName
   *   A fully-qualified path representing CustomerLabel resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCustomerLabelName(customerLabelName: string) {
    return this.pathTemplates.customerLabelPathTemplate.match(customerLabelName).customer_id;
  }

  /**
   * Parse the label_id from CustomerLabel resource.
   *
   * @param {string} customerLabelName
   *   A fully-qualified path representing CustomerLabel resource.
   * @returns {string} A string representing the label_id.
   */
  matchLabelIdFromCustomerLabelName(customerLabelName: string) {
    return this.pathTemplates.customerLabelPathTemplate.match(customerLabelName).label_id;
  }

  /**
   * Return a fully-qualified customerManagerLink resource name string.
   *
   * @param {string} customer_id
   * @param {string} manager_customer_id
   * @param {string} manager_link_id
   * @returns {string} Resource name string.
   */
  customerManagerLinkPath(customerId:string,managerCustomerId:string,managerLinkId:string) {
    return this.pathTemplates.customerManagerLinkPathTemplate.render({
      customer_id: customerId,
      manager_customer_id: managerCustomerId,
      manager_link_id: managerLinkId,
    });
  }

  /**
   * Parse the customer_id from CustomerManagerLink resource.
   *
   * @param {string} customerManagerLinkName
   *   A fully-qualified path representing CustomerManagerLink resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCustomerManagerLinkName(customerManagerLinkName: string) {
    return this.pathTemplates.customerManagerLinkPathTemplate.match(customerManagerLinkName).customer_id;
  }

  /**
   * Parse the manager_customer_id from CustomerManagerLink resource.
   *
   * @param {string} customerManagerLinkName
   *   A fully-qualified path representing CustomerManagerLink resource.
   * @returns {string} A string representing the manager_customer_id.
   */
  matchManagerCustomerIdFromCustomerManagerLinkName(customerManagerLinkName: string) {
    return this.pathTemplates.customerManagerLinkPathTemplate.match(customerManagerLinkName).manager_customer_id;
  }

  /**
   * Parse the manager_link_id from CustomerManagerLink resource.
   *
   * @param {string} customerManagerLinkName
   *   A fully-qualified path representing CustomerManagerLink resource.
   * @returns {string} A string representing the manager_link_id.
   */
  matchManagerLinkIdFromCustomerManagerLinkName(customerManagerLinkName: string) {
    return this.pathTemplates.customerManagerLinkPathTemplate.match(customerManagerLinkName).manager_link_id;
  }

  /**
   * Return a fully-qualified customerNegativeCriterion resource name string.
   *
   * @param {string} customer_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  customerNegativeCriterionPath(customerId:string,criterionId:string) {
    return this.pathTemplates.customerNegativeCriterionPathTemplate.render({
      customer_id: customerId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from CustomerNegativeCriterion resource.
   *
   * @param {string} customerNegativeCriterionName
   *   A fully-qualified path representing CustomerNegativeCriterion resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCustomerNegativeCriterionName(customerNegativeCriterionName: string) {
    return this.pathTemplates.customerNegativeCriterionPathTemplate.match(customerNegativeCriterionName).customer_id;
  }

  /**
   * Parse the criterion_id from CustomerNegativeCriterion resource.
   *
   * @param {string} customerNegativeCriterionName
   *   A fully-qualified path representing CustomerNegativeCriterion resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromCustomerNegativeCriterionName(customerNegativeCriterionName: string) {
    return this.pathTemplates.customerNegativeCriterionPathTemplate.match(customerNegativeCriterionName).criterion_id;
  }

  /**
   * Return a fully-qualified customerUserAccess resource name string.
   *
   * @param {string} customer_id
   * @param {string} user_id
   * @returns {string} Resource name string.
   */
  customerUserAccessPath(customerId:string,userId:string) {
    return this.pathTemplates.customerUserAccessPathTemplate.render({
      customer_id: customerId,
      user_id: userId,
    });
  }

  /**
   * Parse the customer_id from CustomerUserAccess resource.
   *
   * @param {string} customerUserAccessName
   *   A fully-qualified path representing CustomerUserAccess resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromCustomerUserAccessName(customerUserAccessName: string) {
    return this.pathTemplates.customerUserAccessPathTemplate.match(customerUserAccessName).customer_id;
  }

  /**
   * Parse the user_id from CustomerUserAccess resource.
   *
   * @param {string} customerUserAccessName
   *   A fully-qualified path representing CustomerUserAccess resource.
   * @returns {string} A string representing the user_id.
   */
  matchUserIdFromCustomerUserAccessName(customerUserAccessName: string) {
    return this.pathTemplates.customerUserAccessPathTemplate.match(customerUserAccessName).user_id;
  }

  /**
   * Return a fully-qualified detailPlacementView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @returns {string} Resource name string.
   */
  detailPlacementViewPath(customerId:string,adGroupId:string) {
    return this.pathTemplates.detailPlacementViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
    });
  }

  /**
   * Parse the customer_id from DetailPlacementView resource.
   *
   * @param {string} detailPlacementViewName
   *   A fully-qualified path representing DetailPlacementView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromDetailPlacementViewName(detailPlacementViewName: string) {
    return this.pathTemplates.detailPlacementViewPathTemplate.match(detailPlacementViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from DetailPlacementView resource.
   *
   * @param {string} detailPlacementViewName
   *   A fully-qualified path representing DetailPlacementView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromDetailPlacementViewName(detailPlacementViewName: string) {
    return this.pathTemplates.detailPlacementViewPathTemplate.match(detailPlacementViewName).ad_group_id;
  }

  /**
   * Return a fully-qualified displayKeywordView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  displayKeywordViewPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.displayKeywordViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from DisplayKeywordView resource.
   *
   * @param {string} displayKeywordViewName
   *   A fully-qualified path representing DisplayKeywordView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromDisplayKeywordViewName(displayKeywordViewName: string) {
    return this.pathTemplates.displayKeywordViewPathTemplate.match(displayKeywordViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from DisplayKeywordView resource.
   *
   * @param {string} displayKeywordViewName
   *   A fully-qualified path representing DisplayKeywordView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromDisplayKeywordViewName(displayKeywordViewName: string) {
    return this.pathTemplates.displayKeywordViewPathTemplate.match(displayKeywordViewName).ad_group_id;
  }

  /**
   * Parse the criterion_id from DisplayKeywordView resource.
   *
   * @param {string} displayKeywordViewName
   *   A fully-qualified path representing DisplayKeywordView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromDisplayKeywordViewName(displayKeywordViewName: string) {
    return this.pathTemplates.displayKeywordViewPathTemplate.match(displayKeywordViewName).criterion_id;
  }

  /**
   * Return a fully-qualified distanceView resource name string.
   *
   * @param {string} customer_id
   * @param {string} placeholder_chain_id
   * @param {string} distance_bucket
   * @returns {string} Resource name string.
   */
  distanceViewPath(customerId:string,placeholderChainId:string,distanceBucket:string) {
    return this.pathTemplates.distanceViewPathTemplate.render({
      customer_id: customerId,
      placeholder_chain_id: placeholderChainId,
      distance_bucket: distanceBucket,
    });
  }

  /**
   * Parse the customer_id from DistanceView resource.
   *
   * @param {string} distanceViewName
   *   A fully-qualified path representing DistanceView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromDistanceViewName(distanceViewName: string) {
    return this.pathTemplates.distanceViewPathTemplate.match(distanceViewName).customer_id;
  }

  /**
   * Parse the placeholder_chain_id from DistanceView resource.
   *
   * @param {string} distanceViewName
   *   A fully-qualified path representing DistanceView resource.
   * @returns {string} A string representing the placeholder_chain_id.
   */
  matchPlaceholderChainIdFromDistanceViewName(distanceViewName: string) {
    return this.pathTemplates.distanceViewPathTemplate.match(distanceViewName).placeholder_chain_id;
  }

  /**
   * Parse the distance_bucket from DistanceView resource.
   *
   * @param {string} distanceViewName
   *   A fully-qualified path representing DistanceView resource.
   * @returns {string} A string representing the distance_bucket.
   */
  matchDistanceBucketFromDistanceViewName(distanceViewName: string) {
    return this.pathTemplates.distanceViewPathTemplate.match(distanceViewName).distance_bucket;
  }

  /**
   * Return a fully-qualified domainCategory resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} language_code
   * @returns {string} Resource name string.
   */
  domainCategoryPath(customerId:string,campaignId:string,languageCode:string) {
    return this.pathTemplates.domainCategoryPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      language_code: languageCode,
    });
  }

  /**
   * Parse the customer_id from DomainCategory resource.
   *
   * @param {string} domainCategoryName
   *   A fully-qualified path representing DomainCategory resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromDomainCategoryName(domainCategoryName: string) {
    return this.pathTemplates.domainCategoryPathTemplate.match(domainCategoryName).customer_id;
  }

  /**
   * Parse the campaign_id from DomainCategory resource.
   *
   * @param {string} domainCategoryName
   *   A fully-qualified path representing DomainCategory resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromDomainCategoryName(domainCategoryName: string) {
    return this.pathTemplates.domainCategoryPathTemplate.match(domainCategoryName).campaign_id;
  }

  /**
   * Parse the language_code from DomainCategory resource.
   *
   * @param {string} domainCategoryName
   *   A fully-qualified path representing DomainCategory resource.
   * @returns {string} A string representing the language_code.
   */
  matchLanguageCodeFromDomainCategoryName(domainCategoryName: string) {
    return this.pathTemplates.domainCategoryPathTemplate.match(domainCategoryName).language_code;
  }

  /**
   * Return a fully-qualified dynamicSearchAdsSearchTermView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} search_term_fingerprint
   * @param {string} headline_fingerprint
   * @param {string} landing_page_fingerprint
   * @param {string} page_url_fingerprint
   * @returns {string} Resource name string.
   */
  dynamicSearchAdsSearchTermViewPath(customerId:string,adGroupId:string,searchTermFingerprint:string,headlineFingerprint:string,landingPageFingerprint:string,pageUrlFingerprint:string) {
    return this.pathTemplates.dynamicSearchAdsSearchTermViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      search_term_fingerprint: searchTermFingerprint,
      headline_fingerprint: headlineFingerprint,
      landing_page_fingerprint: landingPageFingerprint,
      page_url_fingerprint: pageUrlFingerprint,
    });
  }

  /**
   * Parse the customer_id from DynamicSearchAdsSearchTermView resource.
   *
   * @param {string} dynamicSearchAdsSearchTermViewName
   *   A fully-qualified path representing DynamicSearchAdsSearchTermView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromDynamicSearchAdsSearchTermViewName(dynamicSearchAdsSearchTermViewName: string) {
    return this.pathTemplates.dynamicSearchAdsSearchTermViewPathTemplate.match(dynamicSearchAdsSearchTermViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from DynamicSearchAdsSearchTermView resource.
   *
   * @param {string} dynamicSearchAdsSearchTermViewName
   *   A fully-qualified path representing DynamicSearchAdsSearchTermView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromDynamicSearchAdsSearchTermViewName(dynamicSearchAdsSearchTermViewName: string) {
    return this.pathTemplates.dynamicSearchAdsSearchTermViewPathTemplate.match(dynamicSearchAdsSearchTermViewName).ad_group_id;
  }

  /**
   * Parse the search_term_fingerprint from DynamicSearchAdsSearchTermView resource.
   *
   * @param {string} dynamicSearchAdsSearchTermViewName
   *   A fully-qualified path representing DynamicSearchAdsSearchTermView resource.
   * @returns {string} A string representing the search_term_fingerprint.
   */
  matchSearchTermFingerprintFromDynamicSearchAdsSearchTermViewName(dynamicSearchAdsSearchTermViewName: string) {
    return this.pathTemplates.dynamicSearchAdsSearchTermViewPathTemplate.match(dynamicSearchAdsSearchTermViewName).search_term_fingerprint;
  }

  /**
   * Parse the headline_fingerprint from DynamicSearchAdsSearchTermView resource.
   *
   * @param {string} dynamicSearchAdsSearchTermViewName
   *   A fully-qualified path representing DynamicSearchAdsSearchTermView resource.
   * @returns {string} A string representing the headline_fingerprint.
   */
  matchHeadlineFingerprintFromDynamicSearchAdsSearchTermViewName(dynamicSearchAdsSearchTermViewName: string) {
    return this.pathTemplates.dynamicSearchAdsSearchTermViewPathTemplate.match(dynamicSearchAdsSearchTermViewName).headline_fingerprint;
  }

  /**
   * Parse the landing_page_fingerprint from DynamicSearchAdsSearchTermView resource.
   *
   * @param {string} dynamicSearchAdsSearchTermViewName
   *   A fully-qualified path representing DynamicSearchAdsSearchTermView resource.
   * @returns {string} A string representing the landing_page_fingerprint.
   */
  matchLandingPageFingerprintFromDynamicSearchAdsSearchTermViewName(dynamicSearchAdsSearchTermViewName: string) {
    return this.pathTemplates.dynamicSearchAdsSearchTermViewPathTemplate.match(dynamicSearchAdsSearchTermViewName).landing_page_fingerprint;
  }

  /**
   * Parse the page_url_fingerprint from DynamicSearchAdsSearchTermView resource.
   *
   * @param {string} dynamicSearchAdsSearchTermViewName
   *   A fully-qualified path representing DynamicSearchAdsSearchTermView resource.
   * @returns {string} A string representing the page_url_fingerprint.
   */
  matchPageUrlFingerprintFromDynamicSearchAdsSearchTermViewName(dynamicSearchAdsSearchTermViewName: string) {
    return this.pathTemplates.dynamicSearchAdsSearchTermViewPathTemplate.match(dynamicSearchAdsSearchTermViewName).page_url_fingerprint;
  }

  /**
   * Return a fully-qualified expandedLandingPageView resource name string.
   *
   * @param {string} customer_id
   * @param {string} expanded_final_url_fingerprint
   * @returns {string} Resource name string.
   */
  expandedLandingPageViewPath(customerId:string,expandedFinalUrlFingerprint:string) {
    return this.pathTemplates.expandedLandingPageViewPathTemplate.render({
      customer_id: customerId,
      expanded_final_url_fingerprint: expandedFinalUrlFingerprint,
    });
  }

  /**
   * Parse the customer_id from ExpandedLandingPageView resource.
   *
   * @param {string} expandedLandingPageViewName
   *   A fully-qualified path representing ExpandedLandingPageView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromExpandedLandingPageViewName(expandedLandingPageViewName: string) {
    return this.pathTemplates.expandedLandingPageViewPathTemplate.match(expandedLandingPageViewName).customer_id;
  }

  /**
   * Parse the expanded_final_url_fingerprint from ExpandedLandingPageView resource.
   *
   * @param {string} expandedLandingPageViewName
   *   A fully-qualified path representing ExpandedLandingPageView resource.
   * @returns {string} A string representing the expanded_final_url_fingerprint.
   */
  matchExpandedFinalUrlFingerprintFromExpandedLandingPageViewName(expandedLandingPageViewName: string) {
    return this.pathTemplates.expandedLandingPageViewPathTemplate.match(expandedLandingPageViewName).expanded_final_url_fingerprint;
  }

  /**
   * Return a fully-qualified extensionFeedItem resource name string.
   *
   * @param {string} customer_id
   * @param {string} feed_item_id
   * @returns {string} Resource name string.
   */
  extensionFeedItemPath(customerId:string,feedItemId:string) {
    return this.pathTemplates.extensionFeedItemPathTemplate.render({
      customer_id: customerId,
      feed_item_id: feedItemId,
    });
  }

  /**
   * Parse the customer_id from ExtensionFeedItem resource.
   *
   * @param {string} extensionFeedItemName
   *   A fully-qualified path representing ExtensionFeedItem resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromExtensionFeedItemName(extensionFeedItemName: string) {
    return this.pathTemplates.extensionFeedItemPathTemplate.match(extensionFeedItemName).customer_id;
  }

  /**
   * Parse the feed_item_id from ExtensionFeedItem resource.
   *
   * @param {string} extensionFeedItemName
   *   A fully-qualified path representing ExtensionFeedItem resource.
   * @returns {string} A string representing the feed_item_id.
   */
  matchFeedItemIdFromExtensionFeedItemName(extensionFeedItemName: string) {
    return this.pathTemplates.extensionFeedItemPathTemplate.match(extensionFeedItemName).feed_item_id;
  }

  /**
   * Return a fully-qualified feed resource name string.
   *
   * @param {string} customer_id
   * @param {string} feed_id
   * @returns {string} Resource name string.
   */
  feedPath(customerId:string,feedId:string) {
    return this.pathTemplates.feedPathTemplate.render({
      customer_id: customerId,
      feed_id: feedId,
    });
  }

  /**
   * Parse the customer_id from Feed resource.
   *
   * @param {string} feedName
   *   A fully-qualified path representing Feed resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromFeedName(feedName: string) {
    return this.pathTemplates.feedPathTemplate.match(feedName).customer_id;
  }

  /**
   * Parse the feed_id from Feed resource.
   *
   * @param {string} feedName
   *   A fully-qualified path representing Feed resource.
   * @returns {string} A string representing the feed_id.
   */
  matchFeedIdFromFeedName(feedName: string) {
    return this.pathTemplates.feedPathTemplate.match(feedName).feed_id;
  }

  /**
   * Return a fully-qualified feedItem resource name string.
   *
   * @param {string} customer_id
   * @param {string} feed_id
   * @param {string} feed_item_id
   * @returns {string} Resource name string.
   */
  feedItemPath(customerId:string,feedId:string,feedItemId:string) {
    return this.pathTemplates.feedItemPathTemplate.render({
      customer_id: customerId,
      feed_id: feedId,
      feed_item_id: feedItemId,
    });
  }

  /**
   * Parse the customer_id from FeedItem resource.
   *
   * @param {string} feedItemName
   *   A fully-qualified path representing FeedItem resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromFeedItemName(feedItemName: string) {
    return this.pathTemplates.feedItemPathTemplate.match(feedItemName).customer_id;
  }

  /**
   * Parse the feed_id from FeedItem resource.
   *
   * @param {string} feedItemName
   *   A fully-qualified path representing FeedItem resource.
   * @returns {string} A string representing the feed_id.
   */
  matchFeedIdFromFeedItemName(feedItemName: string) {
    return this.pathTemplates.feedItemPathTemplate.match(feedItemName).feed_id;
  }

  /**
   * Parse the feed_item_id from FeedItem resource.
   *
   * @param {string} feedItemName
   *   A fully-qualified path representing FeedItem resource.
   * @returns {string} A string representing the feed_item_id.
   */
  matchFeedItemIdFromFeedItemName(feedItemName: string) {
    return this.pathTemplates.feedItemPathTemplate.match(feedItemName).feed_item_id;
  }

  /**
   * Return a fully-qualified feedItemSet resource name string.
   *
   * @param {string} customer_id
   * @param {string} feed_id
   * @param {string} feed_item_set_id
   * @returns {string} Resource name string.
   */
  feedItemSetPath(customerId:string,feedId:string,feedItemSetId:string) {
    return this.pathTemplates.feedItemSetPathTemplate.render({
      customer_id: customerId,
      feed_id: feedId,
      feed_item_set_id: feedItemSetId,
    });
  }

  /**
   * Parse the customer_id from FeedItemSet resource.
   *
   * @param {string} feedItemSetName
   *   A fully-qualified path representing FeedItemSet resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromFeedItemSetName(feedItemSetName: string) {
    return this.pathTemplates.feedItemSetPathTemplate.match(feedItemSetName).customer_id;
  }

  /**
   * Parse the feed_id from FeedItemSet resource.
   *
   * @param {string} feedItemSetName
   *   A fully-qualified path representing FeedItemSet resource.
   * @returns {string} A string representing the feed_id.
   */
  matchFeedIdFromFeedItemSetName(feedItemSetName: string) {
    return this.pathTemplates.feedItemSetPathTemplate.match(feedItemSetName).feed_id;
  }

  /**
   * Parse the feed_item_set_id from FeedItemSet resource.
   *
   * @param {string} feedItemSetName
   *   A fully-qualified path representing FeedItemSet resource.
   * @returns {string} A string representing the feed_item_set_id.
   */
  matchFeedItemSetIdFromFeedItemSetName(feedItemSetName: string) {
    return this.pathTemplates.feedItemSetPathTemplate.match(feedItemSetName).feed_item_set_id;
  }

  /**
   * Return a fully-qualified feedItemSetLink resource name string.
   *
   * @param {string} customer_id
   * @param {string} feed_id
   * @param {string} feed_item_set_id
   * @param {string} feed_item_id
   * @returns {string} Resource name string.
   */
  feedItemSetLinkPath(customerId:string,feedId:string,feedItemSetId:string,feedItemId:string) {
    return this.pathTemplates.feedItemSetLinkPathTemplate.render({
      customer_id: customerId,
      feed_id: feedId,
      feed_item_set_id: feedItemSetId,
      feed_item_id: feedItemId,
    });
  }

  /**
   * Parse the customer_id from FeedItemSetLink resource.
   *
   * @param {string} feedItemSetLinkName
   *   A fully-qualified path representing FeedItemSetLink resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromFeedItemSetLinkName(feedItemSetLinkName: string) {
    return this.pathTemplates.feedItemSetLinkPathTemplate.match(feedItemSetLinkName).customer_id;
  }

  /**
   * Parse the feed_id from FeedItemSetLink resource.
   *
   * @param {string} feedItemSetLinkName
   *   A fully-qualified path representing FeedItemSetLink resource.
   * @returns {string} A string representing the feed_id.
   */
  matchFeedIdFromFeedItemSetLinkName(feedItemSetLinkName: string) {
    return this.pathTemplates.feedItemSetLinkPathTemplate.match(feedItemSetLinkName).feed_id;
  }

  /**
   * Parse the feed_item_set_id from FeedItemSetLink resource.
   *
   * @param {string} feedItemSetLinkName
   *   A fully-qualified path representing FeedItemSetLink resource.
   * @returns {string} A string representing the feed_item_set_id.
   */
  matchFeedItemSetIdFromFeedItemSetLinkName(feedItemSetLinkName: string) {
    return this.pathTemplates.feedItemSetLinkPathTemplate.match(feedItemSetLinkName).feed_item_set_id;
  }

  /**
   * Parse the feed_item_id from FeedItemSetLink resource.
   *
   * @param {string} feedItemSetLinkName
   *   A fully-qualified path representing FeedItemSetLink resource.
   * @returns {string} A string representing the feed_item_id.
   */
  matchFeedItemIdFromFeedItemSetLinkName(feedItemSetLinkName: string) {
    return this.pathTemplates.feedItemSetLinkPathTemplate.match(feedItemSetLinkName).feed_item_id;
  }

  /**
   * Return a fully-qualified feedItemTarget resource name string.
   *
   * @param {string} customer_id
   * @param {string} feed_id
   * @param {string} feed_item_id
   * @param {string} feed_item_target_type
   * @param {string} feed_item_target_id
   * @returns {string} Resource name string.
   */
  feedItemTargetPath(customerId:string,feedId:string,feedItemId:string,feedItemTargetType:string,feedItemTargetId:string) {
    return this.pathTemplates.feedItemTargetPathTemplate.render({
      customer_id: customerId,
      feed_id: feedId,
      feed_item_id: feedItemId,
      feed_item_target_type: feedItemTargetType,
      feed_item_target_id: feedItemTargetId,
    });
  }

  /**
   * Parse the customer_id from FeedItemTarget resource.
   *
   * @param {string} feedItemTargetName
   *   A fully-qualified path representing FeedItemTarget resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromFeedItemTargetName(feedItemTargetName: string) {
    return this.pathTemplates.feedItemTargetPathTemplate.match(feedItemTargetName).customer_id;
  }

  /**
   * Parse the feed_id from FeedItemTarget resource.
   *
   * @param {string} feedItemTargetName
   *   A fully-qualified path representing FeedItemTarget resource.
   * @returns {string} A string representing the feed_id.
   */
  matchFeedIdFromFeedItemTargetName(feedItemTargetName: string) {
    return this.pathTemplates.feedItemTargetPathTemplate.match(feedItemTargetName).feed_id;
  }

  /**
   * Parse the feed_item_id from FeedItemTarget resource.
   *
   * @param {string} feedItemTargetName
   *   A fully-qualified path representing FeedItemTarget resource.
   * @returns {string} A string representing the feed_item_id.
   */
  matchFeedItemIdFromFeedItemTargetName(feedItemTargetName: string) {
    return this.pathTemplates.feedItemTargetPathTemplate.match(feedItemTargetName).feed_item_id;
  }

  /**
   * Parse the feed_item_target_type from FeedItemTarget resource.
   *
   * @param {string} feedItemTargetName
   *   A fully-qualified path representing FeedItemTarget resource.
   * @returns {string} A string representing the feed_item_target_type.
   */
  matchFeedItemTargetTypeFromFeedItemTargetName(feedItemTargetName: string) {
    return this.pathTemplates.feedItemTargetPathTemplate.match(feedItemTargetName).feed_item_target_type;
  }

  /**
   * Parse the feed_item_target_id from FeedItemTarget resource.
   *
   * @param {string} feedItemTargetName
   *   A fully-qualified path representing FeedItemTarget resource.
   * @returns {string} A string representing the feed_item_target_id.
   */
  matchFeedItemTargetIdFromFeedItemTargetName(feedItemTargetName: string) {
    return this.pathTemplates.feedItemTargetPathTemplate.match(feedItemTargetName).feed_item_target_id;
  }

  /**
   * Return a fully-qualified feedMapping resource name string.
   *
   * @param {string} customer_id
   * @param {string} feed_id
   * @param {string} feed_mapping_id
   * @returns {string} Resource name string.
   */
  feedMappingPath(customerId:string,feedId:string,feedMappingId:string) {
    return this.pathTemplates.feedMappingPathTemplate.render({
      customer_id: customerId,
      feed_id: feedId,
      feed_mapping_id: feedMappingId,
    });
  }

  /**
   * Parse the customer_id from FeedMapping resource.
   *
   * @param {string} feedMappingName
   *   A fully-qualified path representing FeedMapping resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromFeedMappingName(feedMappingName: string) {
    return this.pathTemplates.feedMappingPathTemplate.match(feedMappingName).customer_id;
  }

  /**
   * Parse the feed_id from FeedMapping resource.
   *
   * @param {string} feedMappingName
   *   A fully-qualified path representing FeedMapping resource.
   * @returns {string} A string representing the feed_id.
   */
  matchFeedIdFromFeedMappingName(feedMappingName: string) {
    return this.pathTemplates.feedMappingPathTemplate.match(feedMappingName).feed_id;
  }

  /**
   * Parse the feed_mapping_id from FeedMapping resource.
   *
   * @param {string} feedMappingName
   *   A fully-qualified path representing FeedMapping resource.
   * @returns {string} A string representing the feed_mapping_id.
   */
  matchFeedMappingIdFromFeedMappingName(feedMappingName: string) {
    return this.pathTemplates.feedMappingPathTemplate.match(feedMappingName).feed_mapping_id;
  }

  /**
   * Return a fully-qualified feedPlaceholderView resource name string.
   *
   * @param {string} customer_id
   * @param {string} placeholder_type
   * @returns {string} Resource name string.
   */
  feedPlaceholderViewPath(customerId:string,placeholderType:string) {
    return this.pathTemplates.feedPlaceholderViewPathTemplate.render({
      customer_id: customerId,
      placeholder_type: placeholderType,
    });
  }

  /**
   * Parse the customer_id from FeedPlaceholderView resource.
   *
   * @param {string} feedPlaceholderViewName
   *   A fully-qualified path representing FeedPlaceholderView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromFeedPlaceholderViewName(feedPlaceholderViewName: string) {
    return this.pathTemplates.feedPlaceholderViewPathTemplate.match(feedPlaceholderViewName).customer_id;
  }

  /**
   * Parse the placeholder_type from FeedPlaceholderView resource.
   *
   * @param {string} feedPlaceholderViewName
   *   A fully-qualified path representing FeedPlaceholderView resource.
   * @returns {string} A string representing the placeholder_type.
   */
  matchPlaceholderTypeFromFeedPlaceholderViewName(feedPlaceholderViewName: string) {
    return this.pathTemplates.feedPlaceholderViewPathTemplate.match(feedPlaceholderViewName).placeholder_type;
  }

  /**
   * Return a fully-qualified genderView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  genderViewPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.genderViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from GenderView resource.
   *
   * @param {string} genderViewName
   *   A fully-qualified path representing GenderView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromGenderViewName(genderViewName: string) {
    return this.pathTemplates.genderViewPathTemplate.match(genderViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from GenderView resource.
   *
   * @param {string} genderViewName
   *   A fully-qualified path representing GenderView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromGenderViewName(genderViewName: string) {
    return this.pathTemplates.genderViewPathTemplate.match(genderViewName).ad_group_id;
  }

  /**
   * Parse the criterion_id from GenderView resource.
   *
   * @param {string} genderViewName
   *   A fully-qualified path representing GenderView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromGenderViewName(genderViewName: string) {
    return this.pathTemplates.genderViewPathTemplate.match(genderViewName).criterion_id;
  }

  /**
   * Return a fully-qualified geoTargetConstant resource name string.
   *
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  geoTargetConstantPath(criterionId:string) {
    return this.pathTemplates.geoTargetConstantPathTemplate.render({
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the criterion_id from GeoTargetConstant resource.
   *
   * @param {string} geoTargetConstantName
   *   A fully-qualified path representing GeoTargetConstant resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromGeoTargetConstantName(geoTargetConstantName: string) {
    return this.pathTemplates.geoTargetConstantPathTemplate.match(geoTargetConstantName).criterion_id;
  }

  /**
   * Return a fully-qualified geographicView resource name string.
   *
   * @param {string} customer_id
   * @param {string} country_criterion_id
   * @param {string} location_type
   * @returns {string} Resource name string.
   */
  geographicViewPath(customerId:string,countryCriterionId:string,locationType:string) {
    return this.pathTemplates.geographicViewPathTemplate.render({
      customer_id: customerId,
      country_criterion_id: countryCriterionId,
      location_type: locationType,
    });
  }

  /**
   * Parse the customer_id from GeographicView resource.
   *
   * @param {string} geographicViewName
   *   A fully-qualified path representing GeographicView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromGeographicViewName(geographicViewName: string) {
    return this.pathTemplates.geographicViewPathTemplate.match(geographicViewName).customer_id;
  }

  /**
   * Parse the country_criterion_id from GeographicView resource.
   *
   * @param {string} geographicViewName
   *   A fully-qualified path representing GeographicView resource.
   * @returns {string} A string representing the country_criterion_id.
   */
  matchCountryCriterionIdFromGeographicViewName(geographicViewName: string) {
    return this.pathTemplates.geographicViewPathTemplate.match(geographicViewName).country_criterion_id;
  }

  /**
   * Parse the location_type from GeographicView resource.
   *
   * @param {string} geographicViewName
   *   A fully-qualified path representing GeographicView resource.
   * @returns {string} A string representing the location_type.
   */
  matchLocationTypeFromGeographicViewName(geographicViewName: string) {
    return this.pathTemplates.geographicViewPathTemplate.match(geographicViewName).location_type;
  }

  /**
   * Return a fully-qualified googleAdsField resource name string.
   *
   * @param {string} google_ads_field
   * @returns {string} Resource name string.
   */
  googleAdsFieldPath(googleAdsField:string) {
    return this.pathTemplates.googleAdsFieldPathTemplate.render({
      google_ads_field: googleAdsField,
    });
  }

  /**
   * Parse the google_ads_field from GoogleAdsField resource.
   *
   * @param {string} googleAdsFieldName
   *   A fully-qualified path representing GoogleAdsField resource.
   * @returns {string} A string representing the google_ads_field.
   */
  matchGoogleAdsFieldFromGoogleAdsFieldName(googleAdsFieldName: string) {
    return this.pathTemplates.googleAdsFieldPathTemplate.match(googleAdsFieldName).google_ads_field;
  }

  /**
   * Return a fully-qualified groupPlacementView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @returns {string} Resource name string.
   */
  groupPlacementViewPath(customerId:string,adGroupId:string) {
    return this.pathTemplates.groupPlacementViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
    });
  }

  /**
   * Parse the customer_id from GroupPlacementView resource.
   *
   * @param {string} groupPlacementViewName
   *   A fully-qualified path representing GroupPlacementView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromGroupPlacementViewName(groupPlacementViewName: string) {
    return this.pathTemplates.groupPlacementViewPathTemplate.match(groupPlacementViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from GroupPlacementView resource.
   *
   * @param {string} groupPlacementViewName
   *   A fully-qualified path representing GroupPlacementView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromGroupPlacementViewName(groupPlacementViewName: string) {
    return this.pathTemplates.groupPlacementViewPathTemplate.match(groupPlacementViewName).ad_group_id;
  }

  /**
   * Return a fully-qualified hotelGroupView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  hotelGroupViewPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.hotelGroupViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from HotelGroupView resource.
   *
   * @param {string} hotelGroupViewName
   *   A fully-qualified path representing HotelGroupView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromHotelGroupViewName(hotelGroupViewName: string) {
    return this.pathTemplates.hotelGroupViewPathTemplate.match(hotelGroupViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from HotelGroupView resource.
   *
   * @param {string} hotelGroupViewName
   *   A fully-qualified path representing HotelGroupView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromHotelGroupViewName(hotelGroupViewName: string) {
    return this.pathTemplates.hotelGroupViewPathTemplate.match(hotelGroupViewName).ad_group_id;
  }

  /**
   * Parse the criterion_id from HotelGroupView resource.
   *
   * @param {string} hotelGroupViewName
   *   A fully-qualified path representing HotelGroupView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromHotelGroupViewName(hotelGroupViewName: string) {
    return this.pathTemplates.hotelGroupViewPathTemplate.match(hotelGroupViewName).criterion_id;
  }

  /**
   * Return a fully-qualified hotelPerformanceView resource name string.
   *
   * @param {string} customer_id
   * @returns {string} Resource name string.
   */
  hotelPerformanceViewPath(customerId:string) {
    return this.pathTemplates.hotelPerformanceViewPathTemplate.render({
      customer_id: customerId,
    });
  }

  /**
   * Parse the customer_id from HotelPerformanceView resource.
   *
   * @param {string} hotelPerformanceViewName
   *   A fully-qualified path representing HotelPerformanceView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromHotelPerformanceViewName(hotelPerformanceViewName: string) {
    return this.pathTemplates.hotelPerformanceViewPathTemplate.match(hotelPerformanceViewName).customer_id;
  }

  /**
   * Return a fully-qualified incomeRangeView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  incomeRangeViewPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.incomeRangeViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from IncomeRangeView resource.
   *
   * @param {string} incomeRangeViewName
   *   A fully-qualified path representing IncomeRangeView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromIncomeRangeViewName(incomeRangeViewName: string) {
    return this.pathTemplates.incomeRangeViewPathTemplate.match(incomeRangeViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from IncomeRangeView resource.
   *
   * @param {string} incomeRangeViewName
   *   A fully-qualified path representing IncomeRangeView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromIncomeRangeViewName(incomeRangeViewName: string) {
    return this.pathTemplates.incomeRangeViewPathTemplate.match(incomeRangeViewName).ad_group_id;
  }

  /**
   * Parse the criterion_id from IncomeRangeView resource.
   *
   * @param {string} incomeRangeViewName
   *   A fully-qualified path representing IncomeRangeView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromIncomeRangeViewName(incomeRangeViewName: string) {
    return this.pathTemplates.incomeRangeViewPathTemplate.match(incomeRangeViewName).criterion_id;
  }

  /**
   * Return a fully-qualified invoice resource name string.
   *
   * @param {string} customer_id
   * @param {string} invoice_id
   * @returns {string} Resource name string.
   */
  invoicePath(customerId:string,invoiceId:string) {
    return this.pathTemplates.invoicePathTemplate.render({
      customer_id: customerId,
      invoice_id: invoiceId,
    });
  }

  /**
   * Parse the customer_id from Invoice resource.
   *
   * @param {string} invoiceName
   *   A fully-qualified path representing Invoice resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromInvoiceName(invoiceName: string) {
    return this.pathTemplates.invoicePathTemplate.match(invoiceName).customer_id;
  }

  /**
   * Parse the invoice_id from Invoice resource.
   *
   * @param {string} invoiceName
   *   A fully-qualified path representing Invoice resource.
   * @returns {string} A string representing the invoice_id.
   */
  matchInvoiceIdFromInvoiceName(invoiceName: string) {
    return this.pathTemplates.invoicePathTemplate.match(invoiceName).invoice_id;
  }

  /**
   * Return a fully-qualified keywordPlan resource name string.
   *
   * @param {string} customer_id
   * @param {string} keyword_plan_id
   * @returns {string} Resource name string.
   */
  keywordPlanPath(customerId:string,keywordPlanId:string) {
    return this.pathTemplates.keywordPlanPathTemplate.render({
      customer_id: customerId,
      keyword_plan_id: keywordPlanId,
    });
  }

  /**
   * Parse the customer_id from KeywordPlan resource.
   *
   * @param {string} keywordPlanName
   *   A fully-qualified path representing KeywordPlan resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromKeywordPlanName(keywordPlanName: string) {
    return this.pathTemplates.keywordPlanPathTemplate.match(keywordPlanName).customer_id;
  }

  /**
   * Parse the keyword_plan_id from KeywordPlan resource.
   *
   * @param {string} keywordPlanName
   *   A fully-qualified path representing KeywordPlan resource.
   * @returns {string} A string representing the keyword_plan_id.
   */
  matchKeywordPlanIdFromKeywordPlanName(keywordPlanName: string) {
    return this.pathTemplates.keywordPlanPathTemplate.match(keywordPlanName).keyword_plan_id;
  }

  /**
   * Return a fully-qualified keywordPlanAdGroup resource name string.
   *
   * @param {string} customer_id
   * @param {string} keyword_plan_ad_group_id
   * @returns {string} Resource name string.
   */
  keywordPlanAdGroupPath(customerId:string,keywordPlanAdGroupId:string) {
    return this.pathTemplates.keywordPlanAdGroupPathTemplate.render({
      customer_id: customerId,
      keyword_plan_ad_group_id: keywordPlanAdGroupId,
    });
  }

  /**
   * Parse the customer_id from KeywordPlanAdGroup resource.
   *
   * @param {string} keywordPlanAdGroupName
   *   A fully-qualified path representing KeywordPlanAdGroup resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromKeywordPlanAdGroupName(keywordPlanAdGroupName: string) {
    return this.pathTemplates.keywordPlanAdGroupPathTemplate.match(keywordPlanAdGroupName).customer_id;
  }

  /**
   * Parse the keyword_plan_ad_group_id from KeywordPlanAdGroup resource.
   *
   * @param {string} keywordPlanAdGroupName
   *   A fully-qualified path representing KeywordPlanAdGroup resource.
   * @returns {string} A string representing the keyword_plan_ad_group_id.
   */
  matchKeywordPlanAdGroupIdFromKeywordPlanAdGroupName(keywordPlanAdGroupName: string) {
    return this.pathTemplates.keywordPlanAdGroupPathTemplate.match(keywordPlanAdGroupName).keyword_plan_ad_group_id;
  }

  /**
   * Return a fully-qualified keywordPlanAdGroupKeyword resource name string.
   *
   * @param {string} customer_id
   * @param {string} keyword_plan_ad_group_keyword_id
   * @returns {string} Resource name string.
   */
  keywordPlanAdGroupKeywordPath(customerId:string,keywordPlanAdGroupKeywordId:string) {
    return this.pathTemplates.keywordPlanAdGroupKeywordPathTemplate.render({
      customer_id: customerId,
      keyword_plan_ad_group_keyword_id: keywordPlanAdGroupKeywordId,
    });
  }

  /**
   * Parse the customer_id from KeywordPlanAdGroupKeyword resource.
   *
   * @param {string} keywordPlanAdGroupKeywordName
   *   A fully-qualified path representing KeywordPlanAdGroupKeyword resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromKeywordPlanAdGroupKeywordName(keywordPlanAdGroupKeywordName: string) {
    return this.pathTemplates.keywordPlanAdGroupKeywordPathTemplate.match(keywordPlanAdGroupKeywordName).customer_id;
  }

  /**
   * Parse the keyword_plan_ad_group_keyword_id from KeywordPlanAdGroupKeyword resource.
   *
   * @param {string} keywordPlanAdGroupKeywordName
   *   A fully-qualified path representing KeywordPlanAdGroupKeyword resource.
   * @returns {string} A string representing the keyword_plan_ad_group_keyword_id.
   */
  matchKeywordPlanAdGroupKeywordIdFromKeywordPlanAdGroupKeywordName(keywordPlanAdGroupKeywordName: string) {
    return this.pathTemplates.keywordPlanAdGroupKeywordPathTemplate.match(keywordPlanAdGroupKeywordName).keyword_plan_ad_group_keyword_id;
  }

  /**
   * Return a fully-qualified keywordPlanCampaign resource name string.
   *
   * @param {string} customer_id
   * @param {string} keyword_plan_campaign_id
   * @returns {string} Resource name string.
   */
  keywordPlanCampaignPath(customerId:string,keywordPlanCampaignId:string) {
    return this.pathTemplates.keywordPlanCampaignPathTemplate.render({
      customer_id: customerId,
      keyword_plan_campaign_id: keywordPlanCampaignId,
    });
  }

  /**
   * Parse the customer_id from KeywordPlanCampaign resource.
   *
   * @param {string} keywordPlanCampaignName
   *   A fully-qualified path representing KeywordPlanCampaign resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromKeywordPlanCampaignName(keywordPlanCampaignName: string) {
    return this.pathTemplates.keywordPlanCampaignPathTemplate.match(keywordPlanCampaignName).customer_id;
  }

  /**
   * Parse the keyword_plan_campaign_id from KeywordPlanCampaign resource.
   *
   * @param {string} keywordPlanCampaignName
   *   A fully-qualified path representing KeywordPlanCampaign resource.
   * @returns {string} A string representing the keyword_plan_campaign_id.
   */
  matchKeywordPlanCampaignIdFromKeywordPlanCampaignName(keywordPlanCampaignName: string) {
    return this.pathTemplates.keywordPlanCampaignPathTemplate.match(keywordPlanCampaignName).keyword_plan_campaign_id;
  }

  /**
   * Return a fully-qualified keywordPlanCampaignKeyword resource name string.
   *
   * @param {string} customer_id
   * @param {string} keyword_plan_campaign_keyword_id
   * @returns {string} Resource name string.
   */
  keywordPlanCampaignKeywordPath(customerId:string,keywordPlanCampaignKeywordId:string) {
    return this.pathTemplates.keywordPlanCampaignKeywordPathTemplate.render({
      customer_id: customerId,
      keyword_plan_campaign_keyword_id: keywordPlanCampaignKeywordId,
    });
  }

  /**
   * Parse the customer_id from KeywordPlanCampaignKeyword resource.
   *
   * @param {string} keywordPlanCampaignKeywordName
   *   A fully-qualified path representing KeywordPlanCampaignKeyword resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromKeywordPlanCampaignKeywordName(keywordPlanCampaignKeywordName: string) {
    return this.pathTemplates.keywordPlanCampaignKeywordPathTemplate.match(keywordPlanCampaignKeywordName).customer_id;
  }

  /**
   * Parse the keyword_plan_campaign_keyword_id from KeywordPlanCampaignKeyword resource.
   *
   * @param {string} keywordPlanCampaignKeywordName
   *   A fully-qualified path representing KeywordPlanCampaignKeyword resource.
   * @returns {string} A string representing the keyword_plan_campaign_keyword_id.
   */
  matchKeywordPlanCampaignKeywordIdFromKeywordPlanCampaignKeywordName(keywordPlanCampaignKeywordName: string) {
    return this.pathTemplates.keywordPlanCampaignKeywordPathTemplate.match(keywordPlanCampaignKeywordName).keyword_plan_campaign_keyword_id;
  }

  /**
   * Return a fully-qualified keywordView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  keywordViewPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.keywordViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from KeywordView resource.
   *
   * @param {string} keywordViewName
   *   A fully-qualified path representing KeywordView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromKeywordViewName(keywordViewName: string) {
    return this.pathTemplates.keywordViewPathTemplate.match(keywordViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from KeywordView resource.
   *
   * @param {string} keywordViewName
   *   A fully-qualified path representing KeywordView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromKeywordViewName(keywordViewName: string) {
    return this.pathTemplates.keywordViewPathTemplate.match(keywordViewName).ad_group_id;
  }

  /**
   * Parse the criterion_id from KeywordView resource.
   *
   * @param {string} keywordViewName
   *   A fully-qualified path representing KeywordView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromKeywordViewName(keywordViewName: string) {
    return this.pathTemplates.keywordViewPathTemplate.match(keywordViewName).criterion_id;
  }

  /**
   * Return a fully-qualified label resource name string.
   *
   * @param {string} customer_id
   * @param {string} label_id
   * @returns {string} Resource name string.
   */
  labelPath(customerId:string,labelId:string) {
    return this.pathTemplates.labelPathTemplate.render({
      customer_id: customerId,
      label_id: labelId,
    });
  }

  /**
   * Parse the customer_id from Label resource.
   *
   * @param {string} labelName
   *   A fully-qualified path representing Label resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromLabelName(labelName: string) {
    return this.pathTemplates.labelPathTemplate.match(labelName).customer_id;
  }

  /**
   * Parse the label_id from Label resource.
   *
   * @param {string} labelName
   *   A fully-qualified path representing Label resource.
   * @returns {string} A string representing the label_id.
   */
  matchLabelIdFromLabelName(labelName: string) {
    return this.pathTemplates.labelPathTemplate.match(labelName).label_id;
  }

  /**
   * Return a fully-qualified landingPageView resource name string.
   *
   * @param {string} customer_id
   * @param {string} unexpanded_final_url_fingerprint
   * @returns {string} Resource name string.
   */
  landingPageViewPath(customerId:string,unexpandedFinalUrlFingerprint:string) {
    return this.pathTemplates.landingPageViewPathTemplate.render({
      customer_id: customerId,
      unexpanded_final_url_fingerprint: unexpandedFinalUrlFingerprint,
    });
  }

  /**
   * Parse the customer_id from LandingPageView resource.
   *
   * @param {string} landingPageViewName
   *   A fully-qualified path representing LandingPageView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromLandingPageViewName(landingPageViewName: string) {
    return this.pathTemplates.landingPageViewPathTemplate.match(landingPageViewName).customer_id;
  }

  /**
   * Parse the unexpanded_final_url_fingerprint from LandingPageView resource.
   *
   * @param {string} landingPageViewName
   *   A fully-qualified path representing LandingPageView resource.
   * @returns {string} A string representing the unexpanded_final_url_fingerprint.
   */
  matchUnexpandedFinalUrlFingerprintFromLandingPageViewName(landingPageViewName: string) {
    return this.pathTemplates.landingPageViewPathTemplate.match(landingPageViewName).unexpanded_final_url_fingerprint;
  }

  /**
   * Return a fully-qualified languageConstant resource name string.
   *
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  languageConstantPath(criterionId:string) {
    return this.pathTemplates.languageConstantPathTemplate.render({
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the criterion_id from LanguageConstant resource.
   *
   * @param {string} languageConstantName
   *   A fully-qualified path representing LanguageConstant resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromLanguageConstantName(languageConstantName: string) {
    return this.pathTemplates.languageConstantPathTemplate.match(languageConstantName).criterion_id;
  }

  /**
   * Return a fully-qualified locationView resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  locationViewPath(customerId:string,campaignId:string,criterionId:string) {
    return this.pathTemplates.locationViewPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from LocationView resource.
   *
   * @param {string} locationViewName
   *   A fully-qualified path representing LocationView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromLocationViewName(locationViewName: string) {
    return this.pathTemplates.locationViewPathTemplate.match(locationViewName).customer_id;
  }

  /**
   * Parse the campaign_id from LocationView resource.
   *
   * @param {string} locationViewName
   *   A fully-qualified path representing LocationView resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromLocationViewName(locationViewName: string) {
    return this.pathTemplates.locationViewPathTemplate.match(locationViewName).campaign_id;
  }

  /**
   * Parse the criterion_id from LocationView resource.
   *
   * @param {string} locationViewName
   *   A fully-qualified path representing LocationView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromLocationViewName(locationViewName: string) {
    return this.pathTemplates.locationViewPathTemplate.match(locationViewName).criterion_id;
  }

  /**
   * Return a fully-qualified managedPlacementView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  managedPlacementViewPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.managedPlacementViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from ManagedPlacementView resource.
   *
   * @param {string} managedPlacementViewName
   *   A fully-qualified path representing ManagedPlacementView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromManagedPlacementViewName(managedPlacementViewName: string) {
    return this.pathTemplates.managedPlacementViewPathTemplate.match(managedPlacementViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from ManagedPlacementView resource.
   *
   * @param {string} managedPlacementViewName
   *   A fully-qualified path representing ManagedPlacementView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromManagedPlacementViewName(managedPlacementViewName: string) {
    return this.pathTemplates.managedPlacementViewPathTemplate.match(managedPlacementViewName).ad_group_id;
  }

  /**
   * Parse the criterion_id from ManagedPlacementView resource.
   *
   * @param {string} managedPlacementViewName
   *   A fully-qualified path representing ManagedPlacementView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromManagedPlacementViewName(managedPlacementViewName: string) {
    return this.pathTemplates.managedPlacementViewPathTemplate.match(managedPlacementViewName).criterion_id;
  }

  /**
   * Return a fully-qualified mediaFile resource name string.
   *
   * @param {string} customer_id
   * @param {string} media_file_id
   * @returns {string} Resource name string.
   */
  mediaFilePath(customerId:string,mediaFileId:string) {
    return this.pathTemplates.mediaFilePathTemplate.render({
      customer_id: customerId,
      media_file_id: mediaFileId,
    });
  }

  /**
   * Parse the customer_id from MediaFile resource.
   *
   * @param {string} mediaFileName
   *   A fully-qualified path representing MediaFile resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromMediaFileName(mediaFileName: string) {
    return this.pathTemplates.mediaFilePathTemplate.match(mediaFileName).customer_id;
  }

  /**
   * Parse the media_file_id from MediaFile resource.
   *
   * @param {string} mediaFileName
   *   A fully-qualified path representing MediaFile resource.
   * @returns {string} A string representing the media_file_id.
   */
  matchMediaFileIdFromMediaFileName(mediaFileName: string) {
    return this.pathTemplates.mediaFilePathTemplate.match(mediaFileName).media_file_id;
  }

  /**
   * Return a fully-qualified merchantCenterLink resource name string.
   *
   * @param {string} customer_id
   * @param {string} merchant_center_id
   * @returns {string} Resource name string.
   */
  merchantCenterLinkPath(customerId:string,merchantCenterId:string) {
    return this.pathTemplates.merchantCenterLinkPathTemplate.render({
      customer_id: customerId,
      merchant_center_id: merchantCenterId,
    });
  }

  /**
   * Parse the customer_id from MerchantCenterLink resource.
   *
   * @param {string} merchantCenterLinkName
   *   A fully-qualified path representing MerchantCenterLink resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromMerchantCenterLinkName(merchantCenterLinkName: string) {
    return this.pathTemplates.merchantCenterLinkPathTemplate.match(merchantCenterLinkName).customer_id;
  }

  /**
   * Parse the merchant_center_id from MerchantCenterLink resource.
   *
   * @param {string} merchantCenterLinkName
   *   A fully-qualified path representing MerchantCenterLink resource.
   * @returns {string} A string representing the merchant_center_id.
   */
  matchMerchantCenterIdFromMerchantCenterLinkName(merchantCenterLinkName: string) {
    return this.pathTemplates.merchantCenterLinkPathTemplate.match(merchantCenterLinkName).merchant_center_id;
  }

  /**
   * Return a fully-qualified mobileAppCategoryConstant resource name string.
   *
   * @param {string} mobile_app_category_id
   * @returns {string} Resource name string.
   */
  mobileAppCategoryConstantPath(mobileAppCategoryId:string) {
    return this.pathTemplates.mobileAppCategoryConstantPathTemplate.render({
      mobile_app_category_id: mobileAppCategoryId,
    });
  }

  /**
   * Parse the mobile_app_category_id from MobileAppCategoryConstant resource.
   *
   * @param {string} mobileAppCategoryConstantName
   *   A fully-qualified path representing MobileAppCategoryConstant resource.
   * @returns {string} A string representing the mobile_app_category_id.
   */
  matchMobileAppCategoryIdFromMobileAppCategoryConstantName(mobileAppCategoryConstantName: string) {
    return this.pathTemplates.mobileAppCategoryConstantPathTemplate.match(mobileAppCategoryConstantName).mobile_app_category_id;
  }

  /**
   * Return a fully-qualified mobileDeviceConstant resource name string.
   *
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  mobileDeviceConstantPath(criterionId:string) {
    return this.pathTemplates.mobileDeviceConstantPathTemplate.render({
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the criterion_id from MobileDeviceConstant resource.
   *
   * @param {string} mobileDeviceConstantName
   *   A fully-qualified path representing MobileDeviceConstant resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromMobileDeviceConstantName(mobileDeviceConstantName: string) {
    return this.pathTemplates.mobileDeviceConstantPathTemplate.match(mobileDeviceConstantName).criterion_id;
  }

  /**
   * Return a fully-qualified offlineUserDataJob resource name string.
   *
   * @param {string} customer_id
   * @param {string} offline_user_data_update_id
   * @returns {string} Resource name string.
   */
  offlineUserDataJobPath(customerId:string,offlineUserDataUpdateId:string) {
    return this.pathTemplates.offlineUserDataJobPathTemplate.render({
      customer_id: customerId,
      offline_user_data_update_id: offlineUserDataUpdateId,
    });
  }

  /**
   * Parse the customer_id from OfflineUserDataJob resource.
   *
   * @param {string} offlineUserDataJobName
   *   A fully-qualified path representing OfflineUserDataJob resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromOfflineUserDataJobName(offlineUserDataJobName: string) {
    return this.pathTemplates.offlineUserDataJobPathTemplate.match(offlineUserDataJobName).customer_id;
  }

  /**
   * Parse the offline_user_data_update_id from OfflineUserDataJob resource.
   *
   * @param {string} offlineUserDataJobName
   *   A fully-qualified path representing OfflineUserDataJob resource.
   * @returns {string} A string representing the offline_user_data_update_id.
   */
  matchOfflineUserDataUpdateIdFromOfflineUserDataJobName(offlineUserDataJobName: string) {
    return this.pathTemplates.offlineUserDataJobPathTemplate.match(offlineUserDataJobName).offline_user_data_update_id;
  }

  /**
   * Return a fully-qualified operatingSystemVersionConstant resource name string.
   *
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  operatingSystemVersionConstantPath(criterionId:string) {
    return this.pathTemplates.operatingSystemVersionConstantPathTemplate.render({
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the criterion_id from OperatingSystemVersionConstant resource.
   *
   * @param {string} operatingSystemVersionConstantName
   *   A fully-qualified path representing OperatingSystemVersionConstant resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromOperatingSystemVersionConstantName(operatingSystemVersionConstantName: string) {
    return this.pathTemplates.operatingSystemVersionConstantPathTemplate.match(operatingSystemVersionConstantName).criterion_id;
  }

  /**
   * Return a fully-qualified paidOrganicSearchTermView resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} ad_group_id
   * @returns {string} Resource name string.
   */
  paidOrganicSearchTermViewPath(customerId:string,campaignId:string,adGroupId:string) {
    return this.pathTemplates.paidOrganicSearchTermViewPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      ad_group_id: adGroupId,
    });
  }

  /**
   * Parse the customer_id from PaidOrganicSearchTermView resource.
   *
   * @param {string} paidOrganicSearchTermViewName
   *   A fully-qualified path representing PaidOrganicSearchTermView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromPaidOrganicSearchTermViewName(paidOrganicSearchTermViewName: string) {
    return this.pathTemplates.paidOrganicSearchTermViewPathTemplate.match(paidOrganicSearchTermViewName).customer_id;
  }

  /**
   * Parse the campaign_id from PaidOrganicSearchTermView resource.
   *
   * @param {string} paidOrganicSearchTermViewName
   *   A fully-qualified path representing PaidOrganicSearchTermView resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromPaidOrganicSearchTermViewName(paidOrganicSearchTermViewName: string) {
    return this.pathTemplates.paidOrganicSearchTermViewPathTemplate.match(paidOrganicSearchTermViewName).campaign_id;
  }

  /**
   * Parse the ad_group_id from PaidOrganicSearchTermView resource.
   *
   * @param {string} paidOrganicSearchTermViewName
   *   A fully-qualified path representing PaidOrganicSearchTermView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromPaidOrganicSearchTermViewName(paidOrganicSearchTermViewName: string) {
    return this.pathTemplates.paidOrganicSearchTermViewPathTemplate.match(paidOrganicSearchTermViewName).ad_group_id;
  }

  /**
   * Return a fully-qualified parentalStatusView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  parentalStatusViewPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.parentalStatusViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from ParentalStatusView resource.
   *
   * @param {string} parentalStatusViewName
   *   A fully-qualified path representing ParentalStatusView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromParentalStatusViewName(parentalStatusViewName: string) {
    return this.pathTemplates.parentalStatusViewPathTemplate.match(parentalStatusViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from ParentalStatusView resource.
   *
   * @param {string} parentalStatusViewName
   *   A fully-qualified path representing ParentalStatusView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromParentalStatusViewName(parentalStatusViewName: string) {
    return this.pathTemplates.parentalStatusViewPathTemplate.match(parentalStatusViewName).ad_group_id;
  }

  /**
   * Parse the criterion_id from ParentalStatusView resource.
   *
   * @param {string} parentalStatusViewName
   *   A fully-qualified path representing ParentalStatusView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromParentalStatusViewName(parentalStatusViewName: string) {
    return this.pathTemplates.parentalStatusViewPathTemplate.match(parentalStatusViewName).criterion_id;
  }

  /**
   * Return a fully-qualified paymentsAccount resource name string.
   *
   * @param {string} customer_id
   * @param {string} payments_account_id
   * @returns {string} Resource name string.
   */
  paymentsAccountPath(customerId:string,paymentsAccountId:string) {
    return this.pathTemplates.paymentsAccountPathTemplate.render({
      customer_id: customerId,
      payments_account_id: paymentsAccountId,
    });
  }

  /**
   * Parse the customer_id from PaymentsAccount resource.
   *
   * @param {string} paymentsAccountName
   *   A fully-qualified path representing PaymentsAccount resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromPaymentsAccountName(paymentsAccountName: string) {
    return this.pathTemplates.paymentsAccountPathTemplate.match(paymentsAccountName).customer_id;
  }

  /**
   * Parse the payments_account_id from PaymentsAccount resource.
   *
   * @param {string} paymentsAccountName
   *   A fully-qualified path representing PaymentsAccount resource.
   * @returns {string} A string representing the payments_account_id.
   */
  matchPaymentsAccountIdFromPaymentsAccountName(paymentsAccountName: string) {
    return this.pathTemplates.paymentsAccountPathTemplate.match(paymentsAccountName).payments_account_id;
  }

  /**
   * Return a fully-qualified productBiddingCategoryConstant resource name string.
   *
   * @param {string} country_code
   * @param {string} level
   * @param {string} id
   * @returns {string} Resource name string.
   */
  productBiddingCategoryConstantPath(countryCode:string,level:string,id:string) {
    return this.pathTemplates.productBiddingCategoryConstantPathTemplate.render({
      country_code: countryCode,
      level: level,
      id: id,
    });
  }

  /**
   * Parse the country_code from ProductBiddingCategoryConstant resource.
   *
   * @param {string} productBiddingCategoryConstantName
   *   A fully-qualified path representing ProductBiddingCategoryConstant resource.
   * @returns {string} A string representing the country_code.
   */
  matchCountryCodeFromProductBiddingCategoryConstantName(productBiddingCategoryConstantName: string) {
    return this.pathTemplates.productBiddingCategoryConstantPathTemplate.match(productBiddingCategoryConstantName).country_code;
  }

  /**
   * Parse the level from ProductBiddingCategoryConstant resource.
   *
   * @param {string} productBiddingCategoryConstantName
   *   A fully-qualified path representing ProductBiddingCategoryConstant resource.
   * @returns {string} A string representing the level.
   */
  matchLevelFromProductBiddingCategoryConstantName(productBiddingCategoryConstantName: string) {
    return this.pathTemplates.productBiddingCategoryConstantPathTemplate.match(productBiddingCategoryConstantName).level;
  }

  /**
   * Parse the id from ProductBiddingCategoryConstant resource.
   *
   * @param {string} productBiddingCategoryConstantName
   *   A fully-qualified path representing ProductBiddingCategoryConstant resource.
   * @returns {string} A string representing the id.
   */
  matchIdFromProductBiddingCategoryConstantName(productBiddingCategoryConstantName: string) {
    return this.pathTemplates.productBiddingCategoryConstantPathTemplate.match(productBiddingCategoryConstantName).id;
  }

  /**
   * Return a fully-qualified productGroupView resource name string.
   *
   * @param {string} customer_id
   * @param {string} adgroup_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  productGroupViewPath(customerId:string,adgroupId:string,criterionId:string) {
    return this.pathTemplates.productGroupViewPathTemplate.render({
      customer_id: customerId,
      adgroup_id: adgroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from ProductGroupView resource.
   *
   * @param {string} productGroupViewName
   *   A fully-qualified path representing ProductGroupView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromProductGroupViewName(productGroupViewName: string) {
    return this.pathTemplates.productGroupViewPathTemplate.match(productGroupViewName).customer_id;
  }

  /**
   * Parse the adgroup_id from ProductGroupView resource.
   *
   * @param {string} productGroupViewName
   *   A fully-qualified path representing ProductGroupView resource.
   * @returns {string} A string representing the adgroup_id.
   */
  matchAdgroupIdFromProductGroupViewName(productGroupViewName: string) {
    return this.pathTemplates.productGroupViewPathTemplate.match(productGroupViewName).adgroup_id;
  }

  /**
   * Parse the criterion_id from ProductGroupView resource.
   *
   * @param {string} productGroupViewName
   *   A fully-qualified path representing ProductGroupView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromProductGroupViewName(productGroupViewName: string) {
    return this.pathTemplates.productGroupViewPathTemplate.match(productGroupViewName).criterion_id;
  }

  /**
   * Return a fully-qualified recommendation resource name string.
   *
   * @param {string} customer_id
   * @param {string} recommendation_id
   * @returns {string} Resource name string.
   */
  recommendationPath(customerId:string,recommendationId:string) {
    return this.pathTemplates.recommendationPathTemplate.render({
      customer_id: customerId,
      recommendation_id: recommendationId,
    });
  }

  /**
   * Parse the customer_id from Recommendation resource.
   *
   * @param {string} recommendationName
   *   A fully-qualified path representing Recommendation resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromRecommendationName(recommendationName: string) {
    return this.pathTemplates.recommendationPathTemplate.match(recommendationName).customer_id;
  }

  /**
   * Parse the recommendation_id from Recommendation resource.
   *
   * @param {string} recommendationName
   *   A fully-qualified path representing Recommendation resource.
   * @returns {string} A string representing the recommendation_id.
   */
  matchRecommendationIdFromRecommendationName(recommendationName: string) {
    return this.pathTemplates.recommendationPathTemplate.match(recommendationName).recommendation_id;
  }

  /**
   * Return a fully-qualified remarketingAction resource name string.
   *
   * @param {string} customer_id
   * @param {string} remarketing_action_id
   * @returns {string} Resource name string.
   */
  remarketingActionPath(customerId:string,remarketingActionId:string) {
    return this.pathTemplates.remarketingActionPathTemplate.render({
      customer_id: customerId,
      remarketing_action_id: remarketingActionId,
    });
  }

  /**
   * Parse the customer_id from RemarketingAction resource.
   *
   * @param {string} remarketingActionName
   *   A fully-qualified path representing RemarketingAction resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromRemarketingActionName(remarketingActionName: string) {
    return this.pathTemplates.remarketingActionPathTemplate.match(remarketingActionName).customer_id;
  }

  /**
   * Parse the remarketing_action_id from RemarketingAction resource.
   *
   * @param {string} remarketingActionName
   *   A fully-qualified path representing RemarketingAction resource.
   * @returns {string} A string representing the remarketing_action_id.
   */
  matchRemarketingActionIdFromRemarketingActionName(remarketingActionName: string) {
    return this.pathTemplates.remarketingActionPathTemplate.match(remarketingActionName).remarketing_action_id;
  }

  /**
   * Return a fully-qualified searchTermView resource name string.
   *
   * @param {string} customer_id
   * @param {string} campaign_id
   * @param {string} ad_group_id
   * @param {string} query
   * @returns {string} Resource name string.
   */
  searchTermViewPath(customerId:string,campaignId:string,adGroupId:string,query:string) {
    return this.pathTemplates.searchTermViewPathTemplate.render({
      customer_id: customerId,
      campaign_id: campaignId,
      ad_group_id: adGroupId,
      query: query,
    });
  }

  /**
   * Parse the customer_id from SearchTermView resource.
   *
   * @param {string} searchTermViewName
   *   A fully-qualified path representing SearchTermView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromSearchTermViewName(searchTermViewName: string) {
    return this.pathTemplates.searchTermViewPathTemplate.match(searchTermViewName).customer_id;
  }

  /**
   * Parse the campaign_id from SearchTermView resource.
   *
   * @param {string} searchTermViewName
   *   A fully-qualified path representing SearchTermView resource.
   * @returns {string} A string representing the campaign_id.
   */
  matchCampaignIdFromSearchTermViewName(searchTermViewName: string) {
    return this.pathTemplates.searchTermViewPathTemplate.match(searchTermViewName).campaign_id;
  }

  /**
   * Parse the ad_group_id from SearchTermView resource.
   *
   * @param {string} searchTermViewName
   *   A fully-qualified path representing SearchTermView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromSearchTermViewName(searchTermViewName: string) {
    return this.pathTemplates.searchTermViewPathTemplate.match(searchTermViewName).ad_group_id;
  }

  /**
   * Parse the query from SearchTermView resource.
   *
   * @param {string} searchTermViewName
   *   A fully-qualified path representing SearchTermView resource.
   * @returns {string} A string representing the query.
   */
  matchQueryFromSearchTermViewName(searchTermViewName: string) {
    return this.pathTemplates.searchTermViewPathTemplate.match(searchTermViewName).query;
  }

  /**
   * Return a fully-qualified sharedCriterion resource name string.
   *
   * @param {string} customer_id
   * @param {string} shared_set_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  sharedCriterionPath(customerId:string,sharedSetId:string,criterionId:string) {
    return this.pathTemplates.sharedCriterionPathTemplate.render({
      customer_id: customerId,
      shared_set_id: sharedSetId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from SharedCriterion resource.
   *
   * @param {string} sharedCriterionName
   *   A fully-qualified path representing SharedCriterion resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromSharedCriterionName(sharedCriterionName: string) {
    return this.pathTemplates.sharedCriterionPathTemplate.match(sharedCriterionName).customer_id;
  }

  /**
   * Parse the shared_set_id from SharedCriterion resource.
   *
   * @param {string} sharedCriterionName
   *   A fully-qualified path representing SharedCriterion resource.
   * @returns {string} A string representing the shared_set_id.
   */
  matchSharedSetIdFromSharedCriterionName(sharedCriterionName: string) {
    return this.pathTemplates.sharedCriterionPathTemplate.match(sharedCriterionName).shared_set_id;
  }

  /**
   * Parse the criterion_id from SharedCriterion resource.
   *
   * @param {string} sharedCriterionName
   *   A fully-qualified path representing SharedCriterion resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromSharedCriterionName(sharedCriterionName: string) {
    return this.pathTemplates.sharedCriterionPathTemplate.match(sharedCriterionName).criterion_id;
  }

  /**
   * Return a fully-qualified sharedSet resource name string.
   *
   * @param {string} customer_id
   * @param {string} shared_set_id
   * @returns {string} Resource name string.
   */
  sharedSetPath(customerId:string,sharedSetId:string) {
    return this.pathTemplates.sharedSetPathTemplate.render({
      customer_id: customerId,
      shared_set_id: sharedSetId,
    });
  }

  /**
   * Parse the customer_id from SharedSet resource.
   *
   * @param {string} sharedSetName
   *   A fully-qualified path representing SharedSet resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromSharedSetName(sharedSetName: string) {
    return this.pathTemplates.sharedSetPathTemplate.match(sharedSetName).customer_id;
  }

  /**
   * Parse the shared_set_id from SharedSet resource.
   *
   * @param {string} sharedSetName
   *   A fully-qualified path representing SharedSet resource.
   * @returns {string} A string representing the shared_set_id.
   */
  matchSharedSetIdFromSharedSetName(sharedSetName: string) {
    return this.pathTemplates.sharedSetPathTemplate.match(sharedSetName).shared_set_id;
  }

  /**
   * Return a fully-qualified shoppingPerformanceView resource name string.
   *
   * @param {string} customer_id
   * @returns {string} Resource name string.
   */
  shoppingPerformanceViewPath(customerId:string) {
    return this.pathTemplates.shoppingPerformanceViewPathTemplate.render({
      customer_id: customerId,
    });
  }

  /**
   * Parse the customer_id from ShoppingPerformanceView resource.
   *
   * @param {string} shoppingPerformanceViewName
   *   A fully-qualified path representing ShoppingPerformanceView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromShoppingPerformanceViewName(shoppingPerformanceViewName: string) {
    return this.pathTemplates.shoppingPerformanceViewPathTemplate.match(shoppingPerformanceViewName).customer_id;
  }

  /**
   * Return a fully-qualified thirdPartyAppAnalyticsLink resource name string.
   *
   * @param {string} customer_id
   * @param {string} customer_link_id
   * @returns {string} Resource name string.
   */
  thirdPartyAppAnalyticsLinkPath(customerId:string,customerLinkId:string) {
    return this.pathTemplates.thirdPartyAppAnalyticsLinkPathTemplate.render({
      customer_id: customerId,
      customer_link_id: customerLinkId,
    });
  }

  /**
   * Parse the customer_id from ThirdPartyAppAnalyticsLink resource.
   *
   * @param {string} thirdPartyAppAnalyticsLinkName
   *   A fully-qualified path representing ThirdPartyAppAnalyticsLink resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromThirdPartyAppAnalyticsLinkName(thirdPartyAppAnalyticsLinkName: string) {
    return this.pathTemplates.thirdPartyAppAnalyticsLinkPathTemplate.match(thirdPartyAppAnalyticsLinkName).customer_id;
  }

  /**
   * Parse the customer_link_id from ThirdPartyAppAnalyticsLink resource.
   *
   * @param {string} thirdPartyAppAnalyticsLinkName
   *   A fully-qualified path representing ThirdPartyAppAnalyticsLink resource.
   * @returns {string} A string representing the customer_link_id.
   */
  matchCustomerLinkIdFromThirdPartyAppAnalyticsLinkName(thirdPartyAppAnalyticsLinkName: string) {
    return this.pathTemplates.thirdPartyAppAnalyticsLinkPathTemplate.match(thirdPartyAppAnalyticsLinkName).customer_link_id;
  }

  /**
   * Return a fully-qualified topicConstant resource name string.
   *
   * @param {string} topic_id
   * @returns {string} Resource name string.
   */
  topicConstantPath(topicId:string) {
    return this.pathTemplates.topicConstantPathTemplate.render({
      topic_id: topicId,
    });
  }

  /**
   * Parse the topic_id from TopicConstant resource.
   *
   * @param {string} topicConstantName
   *   A fully-qualified path representing TopicConstant resource.
   * @returns {string} A string representing the topic_id.
   */
  matchTopicIdFromTopicConstantName(topicConstantName: string) {
    return this.pathTemplates.topicConstantPathTemplate.match(topicConstantName).topic_id;
  }

  /**
   * Return a fully-qualified topicView resource name string.
   *
   * @param {string} customer_id
   * @param {string} ad_group_id
   * @param {string} criterion_id
   * @returns {string} Resource name string.
   */
  topicViewPath(customerId:string,adGroupId:string,criterionId:string) {
    return this.pathTemplates.topicViewPathTemplate.render({
      customer_id: customerId,
      ad_group_id: adGroupId,
      criterion_id: criterionId,
    });
  }

  /**
   * Parse the customer_id from TopicView resource.
   *
   * @param {string} topicViewName
   *   A fully-qualified path representing TopicView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromTopicViewName(topicViewName: string) {
    return this.pathTemplates.topicViewPathTemplate.match(topicViewName).customer_id;
  }

  /**
   * Parse the ad_group_id from TopicView resource.
   *
   * @param {string} topicViewName
   *   A fully-qualified path representing TopicView resource.
   * @returns {string} A string representing the ad_group_id.
   */
  matchAdGroupIdFromTopicViewName(topicViewName: string) {
    return this.pathTemplates.topicViewPathTemplate.match(topicViewName).ad_group_id;
  }

  /**
   * Parse the criterion_id from TopicView resource.
   *
   * @param {string} topicViewName
   *   A fully-qualified path representing TopicView resource.
   * @returns {string} A string representing the criterion_id.
   */
  matchCriterionIdFromTopicViewName(topicViewName: string) {
    return this.pathTemplates.topicViewPathTemplate.match(topicViewName).criterion_id;
  }

  /**
   * Return a fully-qualified userInterest resource name string.
   *
   * @param {string} customer_id
   * @param {string} user_interest_id
   * @returns {string} Resource name string.
   */
  userInterestPath(customerId:string,userInterestId:string) {
    return this.pathTemplates.userInterestPathTemplate.render({
      customer_id: customerId,
      user_interest_id: userInterestId,
    });
  }

  /**
   * Parse the customer_id from UserInterest resource.
   *
   * @param {string} userInterestName
   *   A fully-qualified path representing UserInterest resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromUserInterestName(userInterestName: string) {
    return this.pathTemplates.userInterestPathTemplate.match(userInterestName).customer_id;
  }

  /**
   * Parse the user_interest_id from UserInterest resource.
   *
   * @param {string} userInterestName
   *   A fully-qualified path representing UserInterest resource.
   * @returns {string} A string representing the user_interest_id.
   */
  matchUserInterestIdFromUserInterestName(userInterestName: string) {
    return this.pathTemplates.userInterestPathTemplate.match(userInterestName).user_interest_id;
  }

  /**
   * Return a fully-qualified userList resource name string.
   *
   * @param {string} customer_id
   * @param {string} user_list_id
   * @returns {string} Resource name string.
   */
  userListPath(customerId:string,userListId:string) {
    return this.pathTemplates.userListPathTemplate.render({
      customer_id: customerId,
      user_list_id: userListId,
    });
  }

  /**
   * Parse the customer_id from UserList resource.
   *
   * @param {string} userListName
   *   A fully-qualified path representing UserList resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromUserListName(userListName: string) {
    return this.pathTemplates.userListPathTemplate.match(userListName).customer_id;
  }

  /**
   * Parse the user_list_id from UserList resource.
   *
   * @param {string} userListName
   *   A fully-qualified path representing UserList resource.
   * @returns {string} A string representing the user_list_id.
   */
  matchUserListIdFromUserListName(userListName: string) {
    return this.pathTemplates.userListPathTemplate.match(userListName).user_list_id;
  }

  /**
   * Return a fully-qualified userLocationView resource name string.
   *
   * @param {string} customer_id
   * @param {string} country_criterion_id
   * @param {string} is_targeting_location
   * @returns {string} Resource name string.
   */
  userLocationViewPath(customerId:string,countryCriterionId:string,isTargetingLocation:string) {
    return this.pathTemplates.userLocationViewPathTemplate.render({
      customer_id: customerId,
      country_criterion_id: countryCriterionId,
      is_targeting_location: isTargetingLocation,
    });
  }

  /**
   * Parse the customer_id from UserLocationView resource.
   *
   * @param {string} userLocationViewName
   *   A fully-qualified path representing UserLocationView resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromUserLocationViewName(userLocationViewName: string) {
    return this.pathTemplates.userLocationViewPathTemplate.match(userLocationViewName).customer_id;
  }

  /**
   * Parse the country_criterion_id from UserLocationView resource.
   *
   * @param {string} userLocationViewName
   *   A fully-qualified path representing UserLocationView resource.
   * @returns {string} A string representing the country_criterion_id.
   */
  matchCountryCriterionIdFromUserLocationViewName(userLocationViewName: string) {
    return this.pathTemplates.userLocationViewPathTemplate.match(userLocationViewName).country_criterion_id;
  }

  /**
   * Parse the is_targeting_location from UserLocationView resource.
   *
   * @param {string} userLocationViewName
   *   A fully-qualified path representing UserLocationView resource.
   * @returns {string} A string representing the is_targeting_location.
   */
  matchIsTargetingLocationFromUserLocationViewName(userLocationViewName: string) {
    return this.pathTemplates.userLocationViewPathTemplate.match(userLocationViewName).is_targeting_location;
  }

  /**
   * Return a fully-qualified video resource name string.
   *
   * @param {string} customer_id
   * @param {string} video_id
   * @returns {string} Resource name string.
   */
  videoPath(customerId:string,videoId:string) {
    return this.pathTemplates.videoPathTemplate.render({
      customer_id: customerId,
      video_id: videoId,
    });
  }

  /**
   * Parse the customer_id from Video resource.
   *
   * @param {string} videoName
   *   A fully-qualified path representing Video resource.
   * @returns {string} A string representing the customer_id.
   */
  matchCustomerIdFromVideoName(videoName: string) {
    return this.pathTemplates.videoPathTemplate.match(videoName).customer_id;
  }

  /**
   * Parse the video_id from Video resource.
   *
   * @param {string} videoName
   *   A fully-qualified path representing Video resource.
   * @returns {string} A string representing the video_id.
   */
  matchVideoIdFromVideoName(videoName: string) {
    return this.pathTemplates.videoPathTemplate.match(videoName).video_id;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    this.initialize();
    if (!this._terminated) {
      return this.accountBudgetProposalServiceStub!.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
